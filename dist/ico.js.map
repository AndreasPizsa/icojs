{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/browser/index.js","src/browser/image.js","src/ico.js","src/extract-one.js","src/image-data.js","src/utils/to-dividable-by-4.js","src/utils/bit-array.js"],"names":["Image","require","ico","ICO","module","exports","dataURLToArrayBuffer","dataURL","string","atob","replace","view","Uint8Array","length","i","charCodeAt","buffer","encode","image","mime","Promise","resolve","data","canvas","document","createElement","width","height","ctx","getContext","imageData","createImageData","dataData","putImageData","toDataURL","extractOne","range","n","Array","fill","map","_","factory","config","previousICO","global","parse","icoDv","DataView","getUint16","reject","Error","icos","all","bit","from1bit","from4bit","from8bit","from24bit","from32bit","then","pngBuffer","isICO","ArrayBuffer","noConflict","this","bitArray","toDividableBy4","index","dv","icoWidth","getUint8","icoHeight","icoOffset","getUint32","icoBit","icoColorsOffset","icoColorsCount","icoXorOffset","icoAndOffset","colorCount","colors","xor","slice","and","push","of8","of1","xorLine","andLine","Uint8ClampedArray","h","w","color","of4","num","rest","buff","byteLength","toString","split","el","parseInt"],"mappings":"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AE3C,OAAO7B,GAAI8C,MAAM,IAAI5D,IAAI,SAAA6D,SAAMC,UAASD,EAAI,OAQ9Cf,IAAG,SAAEtE,GAGH,IAAK,GAFCiF,GAAO,GAAIrF,YAAWI,GACtBsC,KACGxC,EAAI,EAAGA,EAAImF,EAAKC,WAAYpF,IACnCwC,EAAI+B,KAAKY,EAAKnF,GAEhB,OAAOwC,IAIXlD,QAAOC,QAAU6D;AF5CjB,IAAM,OFEgD,CAAC,MEFnC,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AED5D,ADFA,GHKuD,CAAC,AIHlD,QAAQ,ADFF,AAQZ,GCNiB,CDMXC,gBAAiB,SAAA4B,GACrB,GAAMC,GAAOD,EAAM,CACnB,OAAOA,GAAM,IAAM,EAAIA,EAAMA,EAAM,EAAIC,EAGzC5F,QAAOC,QAAU8D;ADRjB,CFAwD,GEAlD,SAAS,GAAG;;;;;;AFAuC,AAMzD,IAAM,OAAO,GAAG,SAAV,OAAO,CAAG,MAAM,EAAI;ADWxB,AEnB0D,AAgB5D,ADPE,AIHA,ADTW,IFmBP,CGVD,CJGG,EDUA,MEHQ,GAAG,ADPA,GAAG,AIHf,MLaG,AEHJ,ADPsB,AIHf,CJGgB,CIHd,EJGiB,CDUjB,ACVkB,EDUhB,GEHD,CFGK,AEHD,EFGG,IEHG,EAAE,KAAK,EAAK;AFIlC,AEHF,ADPA,AEDA,AEFE,ADFJ,IAAM,EFYE,ADPA,ECOE,AGVA,EFEA,CHWC,AEHE,ADPA,CIHC,EJGE,CDUD,AEHE,AGVA,GDFG,CCEC,CJGC,CAAC,AGLA,CJeD,CAAC,AEHE,CAAC,EDPE,CAAC,EIHE,CHUC,ACRpB,AEFoB,ADF1B,CFY2B,CAAC,CFGX,AGXR,EAAE,CEFqB,CAAC,CAAC,ELaV,EAAI,EIfd,CAAG,GAAG,EAAI;AJgBxB,AEHJ,ADPA,AEDE,AEFA,ADFF,MFYM,ADPA,AGLA,EDIE,AEFF,CJGG,CDUC,AIfA,CDIC,AEFF,CJGG,CGLC,CJeC,AEHA,ACRA,AEFF,EAAE,ADFE,CJeC,AEHA,AGVF,EHUI,AEZA,CFYC,AEZA,CAAC,CJeC,AGXA,CHWC,AGXA,GAAG,CHWC,AGXA,CHWC,AEHA,CAAC,CAAC,ACRA,CAAC,EDQG,CCRA,CAAC,CAAC,EDQG,GAAG,EAAE,AAAC,CAAC,IAAI,GAAG,CAAC;AFIlD,AEHJ,ACRE,AEFA,ADFF,MFYM,ECRE,CEFD,ADFA,CJeG,CGXC,CCJD,CCEC,CFEG,AEFF,CHUG,AEZF,CJeG,AIfF,CCEC,CHUG,AGVF,CLaG,CEHC,AGVF,CHUG,AGVF,ADFA,CDIG,ACJF,CDIG,CEFD,CDFC,CDIG,CHWC,AGXA,CHWC,AKbF,ADFA,CFYG,AGVF,CHUG,ACRA,CDQC,ACRA,ACJF,GFYM,ACRD,ACJF,CDIG,CAAC,CCJD,CAAC,CFYI,AGVH,ELaI,AKbF,ADFA,CJeG,AEHC,AGVH,EHUK,AAAC,AGVJ,CHUK,AEZJ,CCEC,ADFA,GFYO,CFGD,CAAC,CAAC,AEHE,CAAC;AFInD,AEHJ,ACRE,AEFE,CDFL,CAAC,IFYM,ECRE,CEFD,GLaG,CAAC,AKbA,EHUI,ACRA,GHWC,AEHE,ACRA,EDQE,CFGD,AEHE,KFGG,CAAC,CKbF,EHUO,CAAC,CFGD,AGXE,AEFL,CLaI,AEHE,ACRA,AEFL,CAAC,CAAC,CHUO,ACRD,AEFL,CFEM,IDQK,CCRA,EDQG,AGVN,CFEM,AEFL,CHUO,AAAC,AGVP,CAAC,CHUQ,ACRF,CAAC,AEFJ,GHUS,ACRF,CDQG,CAAC,AGVN,CFEK,AEFJ,CFEK,AEFJ,CFEK,AEFJ,CAAC,CAAC,CFEK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AHYpE,AEHJ,ACRE,KEFC,CHUG,ECRE,IHWE,AEHE,CFGD,EEHI,ACRA,EDQE,CAAC,ACRA,CHWD,GAAG,KAAK,AEHE,CFGD,AEHE,ICRI,CAAC,CHWD,CAAC,CGXG,CDQC,ACRA,GDQG,EAAE,ACRA,EDQE,CCRC,CAAC,CAAC,CDQC,CAAC,CAAC,ACRA,CAAC,CAAC;AHYhD,AEHJ,ACRE,AEFA,ADFJ,MFYQ,AEZF,CAAC,CDIC,EHWI,CKbD,ELaI,AGXF,CEFC,ADFA,CCEC,CLaG,AGXF,CAAC,ACJA,CDIC,EEFE,CHUG,AGVF,CLaG,CAAC,AKbF,CHUG,AGVF,CAAC,CHUG,CAAC,CGVD,CAAC,EDFE,CAAC,CJeG,CAAC,EEHE,CAAC,CFGC,CAAC,AEHA,AGVZ,CLaa,CKbX,CHUc,KAAK,GAAG,EAAE,AAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AFI1F,AEHJ,ACRE,MDQI,ECRE,EHWE,EGXE,CEHqB,EFGlB,IHWI,AGXA,CDQC,CGXqB,CLcnB,AKdoB,CHWnB,CGXqB,CLcnB,AEHA,CFGC,AEHA,AGXoB,CAAC,CAAC,OHWb,CAAC,ACRA,CAAC,GAAG,CHWC,AGXA,CHWC,GEHG,CCRC,CHWC,CAAC,AEHA,CCRC,CDQC,EAAE,ACRA,CHWC,AGXA,EHWE,CEHC,CAAC,CAAC,CCRC,CHWC,CAAC,CGXC,CAAC,CAAC,CAAC,EHWE,CAAC,CAAC;AACjE,AEHJ,ACRE,KEJ8C,CHY1C,AGZ2C,CAAC,EFI3C,CHWG,GGXC,CAAC,GAAG,CHWG,AEHA,ECRA,CHWG,AEHA,ACRF,MAAM,GHWK,AGXF,CHWG,AGXF,EAAE,CAAC,CHWG,CAAC,AEHA,ECRA,CDQI,ACRH,EAAE,CAAC,EAAE,EAAE,ODQU,GAAG,CAAC,AAAC,CAAC;AFIxD,AEHJ,ACRI,GEJH,GHYK,KFGG,AGXA,IHWI,AGXA,CHWC,AGXA,EDQI,CFGD,AGXA,CHWC,AGXA,CDQG,CFGD,AGXA,CHWC,AGXA,GHWG,AGXA,GAAG,CAAC,GDQK,CFGD,CAAC,AGXA,CDQI,CCRF,CAAC,EAAE,CHWC,CGXC,CHWC,CAAC,EAAE,EAAE,EEHK,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,AAAC,CAAC;AFIlF,AGXA,YAAM,IHWE,CAAC,AGXE,CHWD,CAAC,CGXG,EHWA,CGXG,CAAC,EHWA,CAAC,CAAC,CAAC,CAAC,AGXE,CAAC,GAAG,CAAC,AAAC,CAAC,GAAG,OAAO,GAAI,CAAC,CAAC,CAAC,CAAC;ADSvD,ACRM,MDQA,CFGD,EEHI,GAAG,ACRF,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AHYzB,AEHF,ACRI,SHWC,AEHA,CFGC,CEHC,CCRC,CAAC,KAAK,CDQC,ECRE,CHWC,AGXA,CHWC,AGXA,GAAG,KAAK,CHWC,AGXA,CAAC,CHWC,AGXA,CHWC,AGXA,EHWE,CAAC,CAAC,CAAC;AAClC,AEHF,ACRI,UDQE,EAAE,ACRA,CHWC,AGXA,CHWC,IGXI,GDQG,ACRA,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CHWC,AGXA,CHWC,AGXA,MHWM,CAAC,SAAS,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;AEFvE,ACRI,KHWH,CAAC,CAAC,KGXK,CAAC,CDQC,EAAE,EAAE,ACRA,CDQC,ECRE,CAAC,CAAC,GAAG,CDQC,CAAC,CAAC,ACRA,CAAC,AAAC,CAAC,CDQC,ECRE,GDQG,GAAG,CCRC,CDQC,AAAC,CAAC,CCRC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;ADSvD,ADRA,AEAI,GHWL,IEHI,EAAE,ADRA,IEAI,EDQE,ECRE,CAAC,CAAC,OFAR,MAAM,EAAE,IAAI,EAAE;ACSrB,ADRE,CDWL,CAAC,KGXK,GDQG,ADRE,ECQA,EAAE,CDRG,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;ACSrC,ADRE,AILJ,KFKG,AELA,EHaE,EAAE,CDRC,KCQK,ADRA,CCQC,ADRA,IILT,CHac,CAAC,GDRG,CAAC,AILb,CJKc,CILZ,CJKc,IAAI,CCQC,ADRA,ECQE,GDRG,CAAC,IAAI,ICQI,CAAC,ADRA,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;ADY5E,AEHI,ADRI,AEAJ,AELA,MLgBE,CAAC,AEHA,CGbG,CHaD,ECRE,CELG,ELgBA,CEHC,ADRA,AEAA,AELE,CHaD,ACRA,CHWC,EKhBI,EHaA,CFGC,AEHA,ADRA,CDWC,ACXA,MAAM,AILE,CJKD,AILE,IHaE,ADRA,ECQE,AGbE,CAAC,CAAC,CJKD,CAAC,QCQQ,GAAI,QDRO,CAAC,CAAC,CAAC,GCQI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,SAAS,AAAC,CAAC;AGZ1F,GHaD,ACRA,CDQC,GDRG,CILC,GAAG,GAAG,EAAE,CAAC;AHcf,AGbE,OHaG,EGbE,EHaE,CAAC,CGbC,CAAC,CHaC,CAAC,CGbC,CHaC,AGbA,CHaC,CGbC,CAAC,CHaC,EGbE,IAAI,CAAC,OHaO,EAAE,CAAC,AGbA,EHaE,AGbA,CAAC,CHaC,CGbC,EAAE;AHc1C,AGbE,OHaC,CAAC,CGbC,IAAI,CHaC,CAAC,IAAI,CAAC,CGbF,IAAI,CAAC,CAAC,CHaI,AGbH,CHaI,AGbH,GHaM,CAAC,IGbC,CAAC,CHaI,CAAC,AGbH,CAAC,EAAG,EHaI,CAAC,EGbA,CAAC,CAAC,CAAC,CAAC,CAAC,QHaU,GAAI,CAAC,GAAG,CAAC,AAAC,EAAE,eAAe,GAAI,CAAC,GAAG,CAAC,AAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;ADVnG,AAGD,GCQH,EGbE,KJKO,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AAChE,AILJ,WAAO,CJKG,EILA,CJKG,AILF,GJKK,EILA,CAAC,EAAE,CAAC,CAAC,GJKK,AILF,CJKG,AILF,MJKQ,EAAE,CAAC,CAAC,AILZ,CJKa,CILX;AHc7B,ADRM,SCQC,GAAG,ADRE,CCQD,AGdsB,IJMhB,GAAG,CINqB,CAAC,EAAE,EAAE,EAAE,CAAC;AJOzC,CCQT,CAAC,GGfiD,CAAC,CAAC,QJOtC,EAAE,GAAG,CAAC,KAAK;AAChB,GIPP,aJOa,EAAE,GAAG,CAAC,MAAM;ACS5B,ACTE,MDSI,CAAC,EDRE,CAAC,AEDA,IDSI,GAAG,UAAU,CAAC,ECThB,GAAG,EAAE;AFET,AEDJ,QAAM,GAAG,GAAG,EFCA,GAAG,CAAC,EEDI,CFCD,AEDE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AFE5B,AEDN,QAAM,GAAG,GAAG,CFCD,CAAC,MEDQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AFE1B,AEDR,QAAM,OAAO,EFCA,CAAC,AEDE,IFCE,GAAG,OEDS,CAAC,CFCD,CAAC,CEDG,CAAC,KAAK,CFCD,CAAC,CEDG,EFCA,CAAC,AEDE,CFCD,AEDE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AFE9D,AEDR,QAAM,OAAO,GFCC,AEDE,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AFCpC,AACR,AEDN,QAAI,KAAK,EFCE,CAAC,AEDA,CAAC,CAAC;AFEN,AEDR,QAAM,IAAI,GAAG,EFCA,CAAC,CEDG,GFCC,GAAG,SAAS,CAAC,CEDG,CAAC,GAAG,CAAC,EFCA,CAAC,EEDI,CFCD,CAAC,CAAC,AEDE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AFEvD,AEDR,AEPF,KAAG,IFOI,IAAI,CAAC,GAAG,CFCC,EEDE,AEPb,CFOc,KEPR,CFOc,CEPZ,EFOe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AFC5B,AACR,AEDJ,AEPF,QAAM,GFOC,CEPG,GJQC,AEDA,AEPE,CJQD,AEDA,GAAG,AEPE,CFOD,EAAE,CAAC,GAAG,GAAG,AEPE,CFOD,AEPE,KFOG,CEPG,CFOD,AEPE,CFOD,AEPE,EFOA,EAAE;AFE9B,AEDJ,AEPJ,QAAM,GAAG,CFOC,EEPE,EAAE,CJQD,AEDE,AEPA,CJQD,EEDI,EFCA,CEDG,CAAC,CFCD,KEDO,CAAC,GFCC,AEDE,CFCD,AEDE,AAAC,CAAC,GAAG,IFCC,CAAC,EEDK,CFCF,CAAC,CAAC,AEDI,CAAC,CAAC,CAAC,CAAC;AFE7C,AEDJ,AEPJ,SAAK,GFOG,CAAC,AEPA,CAAC,GAAG,CJQC,AEDA,AEPA,CFOC,CEPC,CAAC,CFOC,EEPE,GFOG,CAAC,AEPA,CFOC,AEPA,CFOC,CAAC,QEPQ,EAAE,CAAC,EAAE,EAAE;AJQ5B,AACR,AEDF,AEPF,SAAG,CAAC,EFOE,CAAC,CEPC,CJQC,AIRA,EJQE,CEDC,CEPC,CAAC,CFOC,AEPA,CFOC,AEPA,CFOC,AEPA,CAAC,EFOE,KAAK,CAAC,CAAC,CAAC,CAAC;AFEvB,AEDJ,KEPH,OFOO,CAAC,IFCI,CAAC,AEDA,GAAG,CFCC,AEDA,CAAC,EFCE,CEDC,KAAK,CAAC,CAAC,CFCC,AEDA,CFCC,AEDA,SFCS,CAAC,GAAG,CAAC,CAAC;AACtC,AEDJ,AEPJ,WAAO,CFOC,CAAC,CEPC,CAAC,GJQG,AEDA,GAA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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconst Image = require('./image');\nconst ico = require('../ico');\n\nconst ICO = ico({ Image });\n\nmodule.exports = ICO;\n","'use strict';\n\nconst dataURLToArrayBuffer = dataURL => {\n  const string = atob(dataURL.replace(/.+,/, ''));\n  const view = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\nconst Image = {\n  /**\n   * create png from imgData.data\n   * @access private\n   * @param {Object} image data\n   * @param {Number} image.width img width\n   * @param {Number} image.height img height\n   * @param {Uint8ClampedArray} image.data same as imageData.data\n   * @param {String} mime Mime type\n   * @returns {ArrayBuffer} png\n   */\n  encode (image, mime) {\n    return new Promise(resolve => {\n      const data = image.data;\n      const canvas = document.createElement('canvas');\n      canvas.width = image.width;\n      canvas.height = image.height;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.createImageData(image.width, image.height);\n      const dataData = imageData.data;\n      for (let i = 0; i < dataData.length; i++) {\n        dataData[i] = data[i];\n      }\n      ctx.putImageData(imageData, 0, 0);\n      resolve(dataURLToArrayBuffer(canvas.toDataURL(mime || 'image/png')));\n    });\n  }\n};\n\nmodule.exports = Image;\n","'use strict';\n\nconst extractOne = require('./extract-one');\nconst imageData = require('./image-data');\n\nconst range = n => new Array(n).fill(0).map((_, i) => i);\n\n/**\n* @class ICO\n*/\n\nconst factory = config => {\n  const previousICO = global.ICO;\n  const Image = config.Image;\n  const ICO = {\n    /**\n     * Parse ICO and return some PNGs.\n     * @memberof ICO\n     * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n     * @param {String} mime Mime type for output.\n     * @returns {Promise<Object[]>} Resolves to array of parsed ICO.\n     *   * `width` **Number** - Image width.\n     *   * `height` **Number** - Image height.\n     *   * `bit` **Number** - Image bit depth.\n     *   * `buffer` **ArrayBuffer** - Image buffer.\n     */\n    parse (buffer, mime) {\n      const icoDv = new DataView(buffer);\n      if (icoDv.getUint16(0, true) !== 0 || icoDv.getUint16(2, true) !== 1) {\n        return Promise.reject(new Error('buffer is not ico'));\n      }\n      // make single image icon\n      // let idCount = icoDv.getUint16(4, true);\n      const icos = Promise.all(range(icoDv.getUint16(4, true)).map(i => {\n        const ico = extractOne(buffer, i);\n        const image = {\n          width: ico.width,\n          height: ico.height\n        };\n        switch (ico.bit) { // eslint-disable-line default-case\n          case 1:\n            image.data = imageData.from1bit(ico);\n            break;\n          case 4:\n            image.data = imageData.from4bit(ico);\n            break;\n          case 8:\n            image.data = imageData.from8bit(ico);\n            break;\n          case 24:\n            image.data = imageData.from24bit(ico);\n            break;\n          case 32:\n            image.data = imageData.from32bit(ico);\n            break;\n        }\n        return Image.encode(image, mime).then(pngBuffer => ({\n          bit: ico.bit,\n          width: ico.width,\n          height: ico.height,\n          buffer: pngBuffer\n        }));\n      }));\n      return icos;\n    },\n    /**\n     * Check the ArrayBuffer is valid ICO.\n     * @memberof ICO\n     * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n     * @returns {Boolean} True if arg is ICO.\n     */\n    isICO (buffer) {\n      if (!(buffer instanceof ArrayBuffer)) {\n        return false;\n      }\n      const icoDv = new DataView(buffer);\n      // idReserved = icoDv.getUint16(0, true)\n      // idType = icoDv.getUint16(0, true)\n      return icoDv.getUint16(0, true) === 0 && icoDv.getUint16(2, true) === 1;\n    },\n    /**\n     * No conflict.\n     * @memberof ICO\n     * @returns {ICO} `ICO` Object.\n     */\n    noConflict () {\n      global.ICO = previousICO;\n      return this;\n    }\n  };\n  return ICO;\n};\n\nmodule.exports = factory;\n","'use strict';\n\nconst bitArray = require('./utils/bit-array');\nconst toDividableBy4 = require('./utils/to-dividable-by-4');\n\n/**\n * extract an icon from buffer\n * @access private\n * @param {ArrayBuffer} buffer ico buffer\n * @param {number} index index of icon\n * @returns {Object} ico parsed ico\n * @returns {Number} ico.width image width\n * @returns {Number} ico.height image height\n * @returns {Number} ico.colorCount color count\n * @returns {Number} ico.bit bit depth\n * @returns {Array[]} ico.colors color palette\n * @returns {ArrayBuffer} ico.xor xor image\n * @returns {ArrayBuffer} ico.and xor and\n */\nconst extractOne = (buffer, index) => {\n  const dv = new DataView(buffer);\n  const icoWidth = dv.getUint8(6 + (index * 16)) || 256;\n  const icoHeight = dv.getUint8(7 + (index * 16)) || 256;\n  const icoOffset = dv.getUint32(18 + (index * 16), true);\n  const icoBit = dv.getUint16(icoOffset + 14, true);\n  const icoColorsOffset = dv.getUint32(18 + (index * 16), true) + dv.getUint32(icoOffset, true);\n  const icoColorsCount = dv.getUint32(icoOffset + 32, true);\n  const icoXorOffset = icoColorsOffset + (icoColorsCount * 4);\n  const icoAndOffset = icoXorOffset + (toDividableBy4(icoWidth * icoBit / 8) * icoHeight);\n\n  const ico = {\n    width: icoWidth,\n    height: icoHeight,\n    colorCount: dv.getUint8(8 + (index * 16)),\n    bit: icoBit,\n    colors: [],\n    xor: buffer.slice(icoXorOffset, icoAndOffset),\n    and: buffer.slice(icoAndOffset, icoAndOffset + (toDividableBy4(icoWidth / 8) * icoHeight))\n  };\n  for (let i = 0; i < icoColorsCount; i++) {\n    ico.colors.push(bitArray.of8(buffer.slice(icoColorsOffset + (i * 4), icoColorsOffset + (i * 4) + 4)));\n  }\n\n  return ico;\n};\n\nmodule.exports = extractOne;\n","'use strict';\n\nconst bitArray = require('./utils/bit-array');\nconst toDividableBy4 = require('./utils/to-dividable-by-4');\n\nconst imageData = {\n  /**\n   * make 1bit image imageData.data\n   * @access private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from1bit (ico) {\n    const xor = bitArray.of1(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        const color = ico.colors[xor[(h * xorLine) + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[(h * andLine) + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 4bit image imageData.data\n   * @access private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from4bit (ico) {\n    const xor = bitArray.of4(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        const color = ico.colors[xor[(h * xorLine) + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[(h * andLine) + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 8bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from8bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        const color = ico.colors[xor[(h * xorLine) + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[(h * andLine) + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 24bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from24bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        data[index] = xor[(((h * xorLine) + w) * 3) + 2];\n        data[index + 1] = xor[(((h * xorLine) + w) * 3) + 1];\n        data[index + 2] = xor[((h * xorLine) + w) * 3];\n        data[index + 3] = and[(h * andLine) + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 32bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from32bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        data[index] = xor[(((h * xorLine) + w) * 4) + 2];\n        data[index + 1] = xor[(((h * xorLine) + w) * 4) + 1];\n        data[index + 2] = xor[((h * xorLine) + w) * 4];\n        data[index + 3] = and[(h * andLine) + w] === 1 || xor[(((h * xorLine) + w) * 4) + 3] === 1 ? 0 : xor[(((h * xorLine) + w) * 4) + 3] > 1 ? xor[(((h * xorLine) + w) * 4) + 3] : 255; // eslint-disable-line no-nested-ternary\n        index += 4;\n      }\n    }\n    return data;\n  }\n};\n\nmodule.exports = imageData;\n","'use strict';\n\n/**\n * Make number dividable by 4\n * @access private\n * @param {Number} num number\n * @returns {Number} number dividable by 4\n */\nconst toDividableBy4 = num => {\n  const rest = num % 4;\n  return num % 4 === 0 ? num : num + 4 - rest;\n};\n\nmodule.exports = toDividableBy4;\n","'use strict';\n\nconst bitArray = {\n  /**\n   * convert ArrayBuffer to 1bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of1 (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += `000000000${buff[i].toString(2)}`.slice(-8);\n    }\n    return bit.split('').map(el => parseInt(el, 2));\n  },\n  /**\n   * convert ArrayBuffer to 4bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of4 (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += `00${buff[i].toString(16)}`.slice(-2);\n    }\n    return bit.split('').map(el => parseInt(el, 16));\n  },\n  /**\n   * convert ArrayBuffer to 8bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of8 (buffer) {\n    const buff = new Uint8Array(buffer);\n    const bit = [];\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit.push(buff[i]);\n    }\n    return bit;\n  }\n};\n\nmodule.exports = bitArray;\n"]}