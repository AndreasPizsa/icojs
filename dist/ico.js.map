{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/browser/index.js","src/browser/image.js","src/ico.js","src/extract-one.js","src/image-data.js","src/utils/to-dividable-by-4.js","src/utils/bit-array.js"],"names":["Image","require","ico","ICO","module","exports","dataURLToArrayBuffer","dataURL","string","global","atob","replace","view","Uint8Array","length","i","charCodeAt","buffer","encode","image","mime","Promise","resolve","data","canvas","document","createElement","width","height","ctx","getContext","imageData","createImageData","dataData","putImageData","toDataURL","extractOne","range","n","Array","fill","map","_","factory","config","previousICO","parse","icoDv","DataView","getUint16","reject","Error","icos","all","undefined","bit","from1bit","from4bit","from8bit","from24bit","from32bit","then","pngBuffer","isICO","ArrayBuffer","noConflict","this","bitArray","toDividableBy4","index","dv","icoWidth","getUint8","icoHeight","icoOffset","getUint32","icoBit","icoColorsOffset","icoColorsCount","icoXorOffset","icoAndOffset","colorCount","colors","xor","slice","and","push","of8","of1","xorLine","andLine","Uint8ClampedArray","h","w","color","of4","num","buff","byteLength","toString","split","el","parseInt"],"mappings":"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GAAGoF,SAAS,KAAKf,MAAM,GAE7C,OAAO7B,GAAI6C,MAAM,IAAI3D,IAAI,SAAA4D,GACvB,MAAOC,UAASD,EAAI,OASxBd,IAAG,SAAEtE,GAGH,IAAK,GAFCgF,GAAO,GAAIpF,YAAWI,GACtBsC,KACGxC,EAAI,EAAGA,EAAIkF,EAAKC,WAAYnF,IACnCwC,EAAI+B,KAAKW,EAAKlF,GAEhB,OAAOwC,IAIXnD,QAAOC,QAAU8D;AFhDjB,IAAM,OFEgD,CAAC,MEFnC,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AED5D,ADFA,GHKuD,CAAC,AIHlD,QAAQ,ADFF,AAQZ,GCNiB,CDMXC,gBAAiB,SAAA4B,GAIrB,MAHIA,GAAM,IAAM,IACdA,GAAO,EAAIA,EAAM,GAEZA,EAGT5F,QAAOC,QAAU+D;ADVjB,CFAwD,GEAlD,SAAS,GAAG;;;;;AHiBhB,QAAM,kBAAE,KAAK,EAAE,IAAI,EAAE;AACnB,AClBqD,AAMzD,IAAM,ODYK,ACZE,GAAG,CDYD,OAAO,CAAC,ACZjB,OAAO,CAAG,EDYO,ICZD,EAAI,CDYI,EAAI;AAC5B,AErBsD,AAgB5D,ADPE,AIHA,ADTW,IFmBP,CGVD,CJGG,IDYI,IAAI,AELA,GFKG,AELA,ADPA,GAAG,AIHf,ELeiB,CAAC,GELnB,ADPsB,AIHf,CLegB,ACZA,CDYC,AKff,EJGiB,CAAC,KCOjB,CAAI,MAAM,EAAE,KAAK,EAAK;AFMhC,AELJ,ADPA,AEDA,AEFE,ADFJ,IAAM,EFYE,ADPA,ECOE,AGVA,ELeE,AGbF,CDQG,ADPA,CIHC,EJGE,CCOC,AGVA,CLeC,EIjBE,CJiBC,AKfA,CJGC,CAAC,AGLA,EFYE,CAAC,CFKC,CAAC,ACZA,CAAC,EIHE,CHUC,ACRpB,AEFoB,ADF1B,CFY2B,CAAC,CCRnB,CHaqB,CAAC,AGbpB,CEFqB,CAAC,CAAC,MDFpB,CAAG,GJiB2B,AIjBxB,CJiByB,CIjBrB,OJiB6B,CAAC,CAAC;AACvD,AELJ,ADPA,AEDE,AEFA,ADFF,MFYM,ADPA,AGLF,EDII,AEFF,CJGG,AGLF,EDII,AEFF,CLeC,ACZE,AGLF,CJiBC,AIjBA,CFYG,ACRA,AEFF,EAAE,CHUG,AGVF,CLeC,AIjBA,CFYG,AEZF,CFYG,CFKD,AIjBA,CDIG,CAAC,GHaC,AGbE,CHaD,AGbE,CDQC,CAAC,CAAC,ACRA,CAAC,CHaD,CAAC,AELE,CCRC,CAAC,CAAC,EDQE,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC;AFMhD,AELJ,ACRE,AEFA,ADFA,MFYI,CEZD,CDIG,CEFD,EFEI,ACJF,CJiBC,AIjBA,CJiBC,AKfA,CFEG,AEFF,CHUG,AEZF,ECEE,CHUG,AGVF,ADFA,CJiBC,CELG,AGVF,CHUG,AGVF,ADFA,CJiBC,AGbE,ACJF,CDIG,ACJF,CCEC,EFEI,CHaD,AGbE,CHaD,AKfA,CHUG,AGVF,CHUG,ACRA,CDQC,ACRA,GHaC,AELE,ACRA,CHaD,AGbE,CAAC,GDQG,AGVF,EAAE,CHUG,AGVF,EHUI,AGVF,CHUG,CGVD,GHUK,GAAG,CAAC;AFMjD,AELJ,ACRE,AEFE,GDFH,GFYK,ECRE,CEFD,CLeG,GAAG,AKfF,CAAC,CHUG,ACRA,CHaC,EELE,ACRA,EDQE,CAAC,CFKC,CAAC,EKfA,GAAG,EHUI,CAAC,CCRC,AEFF,CLeG,AELA,ACRA,AEFF,CLeG,AKfF,CAAC,CHUG,ACRA,AEFF,CFEG,CHaC,CAAC,CAAC,CELC,CCRC,EDQE,AGVF,CFEG,AEFF,CHUG,AGVF,CAAC,CHUG,ACRA,AEFH,CFEI,AEFF,GHUK,ACRA,CDQC,CAAC,AGVF,CFEG,AEFF,CFEG,AEFF,CFEG,AEFF,CAAC,CAAC,CFEG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AHcpE,AELJ,ACRE,ACJF,KCEG,CHUG,ECRE,CCJD,CJiBG,EELE,AEZF,CAAC,EFYI,ACRA,EDQE,CAAC,ACRA,CHaC,GAAG,GAAG,CAAC,CELC,CAAC,ICRI,CAAC,GAAG,CDQC,ACRA,GDQG,CFKC,CAAC,AELA,ACRA,EDQE,CCRC,CAAC,CHaC,AGbA,CHaC,AELA,CAAC,CAAC,ACRA,CAAC,CAAC,CHaC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AACjE,AELJ,ACRE,AEFA,CDFH,CAAC,IFYM,ECRA,EHaI,CKfD,EFEE,CEFC,CAAC,CFEC,CAAC,CHaG,AGbF,EEFE,CLeG,AELA,AGVF,EAAE,CHUG,AGVF,CAAC,CHUG,CAAC,CGVD,CAAC,CLeG,CAAC,IAAI,CAAC,AELA,CAAC,EAAE,AGVZ,EAAE,CHUa,CGVT,IHUc,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AFMxF,AELJ,ACRE,AEFE,MHUE,ECRE,GHaC,CGbG,CEFD,ELeE,AGbE,CHaD,GAAG,AGbE,CHaD,AELE,CGVD,CLeC,AKfA,CLeC,AELE,CGVD,CHUG,CFKD,AELE,AGVF,CAAC,CAAC,CAAC,KLeK,CAAC,AELE,CAAC,ACRA,CAAC,GAAG,CHaD,AGbE,EHaA,CAAC,CELG,CFKD,AGbE,EHaA,AELE,CCRC,CDQC,EAAE,ACRA,CAAC,GDQG,CAAC,CAAC,CCRC,GAAG,CAAC,CAAC,CAAC;AHc3D,AELN,ACRE,ACJJ,KCEK,CHUG,AGVF,ADFA,CCEC,ADFA,EDIE,IAAI,CAAC,ACJA,EJiBE,CAAC,AGbA,ACJA,CJiBC,AELE,CFKD,CGbC,CDQG,ACRF,CHaC,IAAI,CAAC,AGbA,CHaC,CAAC,CAAC,AGbA,CAAC,ACJA,CAAC,CDIC,CAAC,EDQI,ECRA,CDQG,ACRF,EAAE,CAAC,EAAE,EAAE,ODQS,GAAG,CAAC,CAAC;AAC1D,ACRI,GEFH,GHUK,CFKD,IGbI,IAAI,CAAC,EDQI,CCRD,CAAC,CDQG,CCRD,CAAC,GAAG,GAAG,CAAC,GDQK,ECRA,CDQG,CCRD,CAAC,EAAE,EAAE,QDQU,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AFMlF,AGbE,SHaC,CAAC,EGbI,KAAK,GAAG,EHaA,CAAC,AGbE,CAAC,MAAM,CAAC,CHaD,EAAE,AGbE,CHaD,AGbE,CAAC,CHaD,CAAC,CAAC,AGbE,CHaD,MGbQ,GAAG,CAAC,CAAC,CAAC,CAAC;AHcjD,AELJ,ACRM,MDQA,GAAG,GAAG,ACRF,CHaC,AGbA,CHaC,IGbI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GHaG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;AEJvE,ACRI,KHaH,CAAC,CAAC,EELE,EAAE,CCRC,CAAC,KAAK,CDQC,ECRE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;ADS/B,ACRI,GHaL,OELO,EAAE,ACRA,CAAC,KAAK,GDQG,ACRA,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;ADS/B,ACRI,CHaP,CAAC,UGbU,CAAC,CDQC,EAAE,EAAE,ACRA,CDQC,ECRE,CAAC,CAAC,GAAG,CDQC,CAAC,CAAC,ACRA,CAAC,CAAC,CDQC,ECRE,GDQG,GAAG,CCRC,CDQC,CAAC,CCRC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;ADSrD,ADRA,AEAI,ODQD,EAAE,ADRA,IEAI,EDQE,ECRE,CAAC,CAAC,OFAR,MAAM,EAAE,IAAI,EAAE;ADczB,AELI,ADRE,MDaA,CAAC,AGbA,GDQG,ADRE,ECQA,EFKE,AELA,CDRG,EDaA,CCbG,IDaE,ACbE,CDaD,OCbS,CAAC,MAAM,CAAC,CAAC;ACSrC,ADRE,AIHJ,KFGG,AEHA,EHWE,EAAE,CDRC,KCQK,ADRA,CCQC,ADRA,IIHT,CHWc,CAAC,GDRG,CAAC,AIHb,CJGc,CIHZ,CJGc,IAAI,CCQC,ADRA,ECQE,GDRG,CAAC,IAAI,ICQI,CAAC,ADRA,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;ACSxE,ADRI,AEAJ,AEHA,OHWG,CGXG,CHWD,ECRE,CEHG,GHWC,ADRA,AEAA,AEHE,CHWD,ACRA,GEHK,EHWA,CAAC,ADRA,CAAC,MAAM,AIHE,CJGD,AIHE,IHWE,ADRA,ECQE,AGXE,CAAC,CAAC,CJGD,CAAC,QCQQ,GAAG,QDRQ,CAAC,CAAC,CAAC,GCQG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AGVxF,GHWD,ACRA,CDQC,GDRG,CIHC,GAAG,GAAG,EAAE,CAAC;AHYf,AGXE,OHWG,EGXE,EHWE,CAAC,CGXC,CAAC,CHWC,CAAC,CGXC,CHWC,AGXA,CHWC,CGXC,CAAC,CHWC,EGXE,IAAI,CAAC,OHWO,EAAE,CAAC,AGXA,EHWE,AGXA,CAAC,CHWC,CGXC,EAAE;AHY1C,AGXE,OHWC,CAAC,CGXC,IAAI,CHWC,AGXA,CHWC,GGXG,CHWC,CAAC,CGXC,IAAI,CAAC,CAAC,CHWC,AGXA,CHWC,AGXA,GHWG,CAAC,IGXI,CAAC,CHWC,CAAC,AGXA,CAAC,CAAA,CAAE,EHWE,CAAC,EGXE,CAAC,CAAC,CAAC,CAAC,CAAC,QHWQ,GAAG,CAAC,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;ADV/F,AAGD,GCQH,EGXE,KJGO,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AAChE,AIHJ,WAAO,CJGC,EIHE,CAAC,CJGC,IIHI,CAAC,EAAE,CAAC,CAAC,GJGT,AIHY,CJGX,AIHY,UAAA,EAAE,EAAI;AHYjC,ADRM,AIHF,SHWG,GAAG,ADRE,CCQD,AGXA,EJGI,GAAG,GIHC,CAAC,EAAE,EAAE,EJGI,AIHF,CJGG,AIHF,CAAC,KJGO,EAAE,CAAC,CAAC,CAAC;AAClC,CCQP,CAAC,GGXG,CAAC,CAAC,SJGS,GAAG,CAAC,GAAG;AACb,GIHP,YJGY,CAAC;ACShB,ADRY,AEDV,MDSI,CAAC,GCTG,IDSI,EDRE,CCQC,EDRE,QCQQ,CAAC,ADRA,CAAC,CEDjB,GAAG,EAAE,EFCoB,CAAC,GAAG,CAAC,CAAC;AAC/B,AEDR,QAAM,GAAG,GAAG,IFCE,IEDM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AFCpB,AACR,AEDN,QAAM,GAAG,GAAG,CFCD,CAAC,MEDQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AFE1B,AEDR,QAAM,OAAO,CFCD,EEDI,CFCD,SAAS,CAAC,GEDK,CAAC,GAAG,CFCD,AEDE,CFCD,GAAG,CAAC,AEDE,CFCD,EEDI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AFE9D,AEDR,QAAM,OAAO,GFCC,AEDE,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AFCpC,AACR,AEDN,QAAI,KAAK,EFCE,CAAC,AEDA,CAAC,CAAC;AFEN,AEDR,QAAM,IAAI,GAAG,CFCD,GAAG,AEDE,SFCO,CAAC,OEDS,CFCD,AEDE,CFCD,EEDI,CFCD,AEDE,CFCD,CAAC,GEDK,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AFEvD,AEDR,AEHF,KAAG,IFGI,IAAI,CAAC,GAAG,CFCC,EEDE,AEHb,CFGc,KEHR,CFGc,CEHZ,EFGe,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AFC5B,AACR,AEDJ,AEHF,QAAM,GFGC,CEHG,GJIC,AEDA,AEHE,CFGD,CFCC,EEDE,AEHE,CFGD,EAAE,CAAC,GAAG,GAAG,AEHE,CFGD,AEHE,KFGG,CEHG,CFGD,AEHE,CFGD,AEHE,EFGA,EAAE;AFE9B,AEDJ,AEHJ,QAAM,GAAG,CFGC,EEHE,EJIA,AIJE,CFGC,AEHA,EJIA,CEDG,GAAG,CAAC,IFCE,CAAC,CEDG,CAAC,GAAG,CAAC,CAAC,EFCA,CAAC,AEDE,GFCC,CAAC,CAAC,EEDI,GAAG,CAAC,CAAC,CAAC,CAAC;AFE3C,AEDJ,AEHJ,SAAK,GFGG,CAAC,AEHA,CAAC,GAAG,CJIC,AEDA,AEHA,CFGC,CEHC,CAAC,CFGC,EEHE,GFGG,CAAC,AEHA,CFGC,AEHA,CFGC,CAAC,QEHQ,EAAE,CAAC,EAAE,EAAE;AJI5B,AACR,AEDF,AEHF,SAAG,CAAC,EFGE,CAAC,CEHC,CJIC,AIJA,EJIE,CEDC,CEHC,CAAC,CFGC,AEHA,CFGC,AEHA,CFGC,AEHA,CAAC,EFGE,KAAK,CAAC,CAAC,CAAC,CAAC;AFEvB,AEDJ,KEHH,OFGO,CAAC,GFCG,EEDE,CFCC,EEDE,CAAC,CAAC,GAAG,EFCE,CAAC,EEDE,CAAC,CAAC,CAAC,CAAC,GFCG,CAAC,GAAG,CAAC,CAAC;AAChC,AEDJ,AEHJ,WAAO,CFGC,CAAC,CEHC,CAAC,GJIG,AEDA,GAAG,CAAC,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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconst Image = require('./image');\nconst ico = require('../ico');\n\nconst ICO = ico({ Image });\n\nmodule.exports = ICO;\n","'use strict';\n\nconst dataURLToArrayBuffer = dataURL => {\n  const string = global.atob(dataURL.replace(/.+,/, ''));\n  const view = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\nconst Image = {\n  /**\n   * create png from imgData.data\n   * @access private\n   * @param {Object} image data\n   * @param {Number} image.width img width\n   * @param {Number} image.height img height\n   * @param {Uint8ClampedArray} image.data same as imageData.data\n   * @param {String} mime Mime type\n   * @returns {ArrayBuffer} png\n   */\n  encode (image, mime) {\n    return new Promise(resolve => {\n      const data = image.data;\n      const canvas = global.document.createElement('canvas');\n      canvas.width = image.width;\n      canvas.height = image.height;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.createImageData(image.width, image.height);\n      const dataData = imageData.data;\n      for (let i = 0; i < dataData.length; i++) {\n        dataData[i] = data[i];\n      }\n      ctx.putImageData(imageData, 0, 0);\n      resolve(dataURLToArrayBuffer(canvas.toDataURL(mime || 'image/png')));\n    });\n  }\n};\n\nmodule.exports = Image;\n","'use strict';\n\nconst extractOne = require('./extract-one');\nconst imageData = require('./image-data');\n\nconst range = n => new Array(n).fill(0).map((_, i) => i);\n\n/**\n* @class ICO\n*/\n\nconst factory = config => {\n  const previousICO = global.ICO;\n  const Image = config.Image;\n  const ICO = {\n    /**\n     * Parse ICO and return some PNGs.\n     * @memberof ICO\n     * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n     * @param {String} mime Mime type for output.\n     * @returns {Promise<Object[]>} Resolves to array of parsed ICO.\n     *   * `width` **Number** - Image width.\n     *   * `height` **Number** - Image height.\n     *   * `bit` **Number** - Image bit depth.\n     *   * `buffer` **ArrayBuffer** - Image buffer.\n     */\n    parse (buffer, mime) {\n      const icoDv = new DataView(buffer);\n      if (icoDv.getUint16(0, true) !== 0 || icoDv.getUint16(2, true) !== 1) {\n        return Promise.reject(new Error('buffer is not ico'));\n      }\n      // make single image icon\n      // let idCount = icoDv.getUint16(4, true);\n      const icos = Promise.all(range(icoDv.getUint16(4, true)).map(i => {\n        let data;\n        const ico = extractOne(buffer, i);\n        switch (ico.bit) { // eslint-disable-line default-case\n          case 1:\n            data = imageData.from1bit(ico);\n            break;\n          case 4:\n            data = imageData.from4bit(ico);\n            break;\n          case 8:\n            data = imageData.from8bit(ico);\n            break;\n          case 24:\n            data = imageData.from24bit(ico);\n            break;\n          case 32:\n            data = imageData.from32bit(ico);\n            break;\n        }\n        return Image.encode({\n          width: ico.width,\n          height: ico.height,\n          data\n        }, mime).then(pngBuffer => {\n          return {\n            bit: ico.bit,\n            width: ico.width,\n            height: ico.height,\n            buffer: pngBuffer\n          };\n        });\n      }));\n      return icos;\n    },\n    /**\n     * Check the ArrayBuffer is valid ICO.\n     * @memberof ICO\n     * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n     * @returns {Boolean} True if arg is ICO.\n     */\n    isICO (buffer) {\n      if (!(buffer instanceof ArrayBuffer)) {\n        return false;\n      }\n      const icoDv = new DataView(buffer);\n      // idReserved = icoDv.getUint16(0, true)\n      // idType = icoDv.getUint16(0, true)\n      return icoDv.getUint16(0, true) === 0 && icoDv.getUint16(2, true) === 1;\n    },\n    /**\n     * No conflict.\n     * @memberof ICO\n     * @returns {ICO} `ICO` Object.\n     */\n    noConflict () {\n      global.ICO = previousICO;\n      return this;\n    }\n  };\n  return ICO;\n};\n\nmodule.exports = factory;\n","'use strict';\n\nconst bitArray = require('./utils/bit-array');\nconst toDividableBy4 = require('./utils/to-dividable-by-4');\n\n/**\n * extract an icon from buffer\n * @access private\n * @param {ArrayBuffer} buffer ico buffer\n * @param {number} index index of icon\n * @returns {Object} ico parsed ico\n * @returns {Number} ico.width image width\n * @returns {Number} ico.height image height\n * @returns {Number} ico.colorCount color count\n * @returns {Number} ico.bit bit depth\n * @returns {Array[]} ico.colors color palette\n * @returns {ArrayBuffer} ico.xor xor image\n * @returns {ArrayBuffer} ico.and xor and\n */\nconst extractOne = (buffer, index) => {\n  const dv = new DataView(buffer);\n  const icoWidth = dv.getUint8(6 + index * 16) || 256;\n  const icoHeight = dv.getUint8(7 + index * 16) || 256;\n  const icoOffset = dv.getUint32(18 + index * 16, true);\n  const icoBit = dv.getUint16(icoOffset + 14, true);\n  const icoColorsOffset = dv.getUint32(18 + index * 16, true) + dv.getUint32(icoOffset, true);\n  const icoColorsCount = dv.getUint32(icoOffset + 32, true);\n  const icoXorOffset = icoColorsOffset + icoColorsCount * 4;\n  const icoAndOffset = icoXorOffset + toDividableBy4(icoWidth * icoBit / 8) * icoHeight;\n\n  const ico = {\n    width: icoWidth,\n    height: icoHeight,\n    colorCount: dv.getUint8(8 + index * 16),\n    bit: icoBit,\n    colors: [],\n    xor: buffer.slice(icoXorOffset, icoAndOffset),\n    and: buffer.slice(icoAndOffset, icoAndOffset + toDividableBy4(icoWidth / 8) * icoHeight)\n  };\n  for (let i = 0; i < icoColorsCount; i++) {\n    ico.colors.push(bitArray.of8(buffer.slice(icoColorsOffset + i * 4, icoColorsOffset + i * 4 + 4)));\n  }\n\n  return ico;\n};\n\nmodule.exports = extractOne;\n","'use strict';\n\nconst bitArray = require('./utils/bit-array');\nconst toDividableBy4 = require('./utils/to-dividable-by-4');\n\nconst imageData = {\n  /**\n   * make 1bit image imageData.data\n   * @access private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from1bit (ico) {\n    const xor = bitArray.of1(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        const color = ico.colors[xor[h * xorLine + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 4bit image imageData.data\n   * @access private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from4bit (ico) {\n    const xor = bitArray.of4(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        const color = ico.colors[xor[h * xorLine + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 8bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from8bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        const color = ico.colors[xor[h * xorLine + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 24bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from24bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        data[index] = xor[(h * xorLine + w) * 3 + 2];\n        data[index + 1] = xor[(h * xorLine + w) * 3 + 1];\n        data[index + 2] = xor[(h * xorLine + w) * 3];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 32bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from32bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        data[index] = xor[(h * xorLine + w) * 4 + 2];\n        data[index + 1] = xor[(h * xorLine + w) * 4 + 1];\n        data[index + 2] = xor[(h * xorLine + w) * 4];\n        data[index + 3] = and[h * andLine + w] === 1 || xor[(h * xorLine + w) * 4 + 3] === 1 ? 0 : xor[(h * xorLine + w) * 4 + 3] > 1 ? xor[(h * xorLine + w) * 4 + 3] : 255; // eslint-disable-line no-nested-ternary\n        index += 4;\n      }\n    }\n    return data;\n  }\n};\n\nmodule.exports = imageData;\n","'use strict';\n\n/**\n * Make number dividable by 4\n * @access private\n * @param {Number} num number\n * @returns {Number} number dividable by 4\n */\nconst toDividableBy4 = num => {\n  if (num % 4 !== 0) {\n    num += 4 - num % 4;\n  }\n  return num;\n};\n\nmodule.exports = toDividableBy4;\n","'use strict';\n\nconst bitArray = {\n  /**\n   * convert ArrayBuffer to 1bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of1 (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += ('000000000' + buff[i].toString(2)).slice(-8);\n    }\n    return bit.split('').map(el => {\n      return parseInt(el, 2);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 4bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of4 (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += ('00' + buff[i].toString(16)).slice(-2);\n    }\n    return bit.split('').map(el => {\n      return parseInt(el, 16);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 8bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of8 (buffer) {\n    const buff = new Uint8Array(buffer);\n    const bit = [];\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit.push(buff[i]);\n    }\n    return bit;\n  }\n};\n\nmodule.exports = bitArray;\n"]}