{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/browser/index.js","src/browser/png.js","src/ico.js","src/extract-one.js","src/image-data.js","src/utils/to-dividable-by-4.js","src/utils/bit-array.js"],"names":["PNG","require","ico","ICO","module","exports","dataURLToArrayBuffer","dataURL","string","global","atob","replace","view","Uint8Array","length","i","charCodeAt","buffer","encode","image","Promise","resolve","data","canvas","document","createElement","width","height","ctx","getContext","imageData","createImageData","dataData","putImageData","toDataURL","extractOne","range","n","Array","fill","map","_","factory","config","previousICO","parse","icoDv","DataView","getUint16","reject","Error","icos","all","undefined","bit","from1bit","from4bit","from8bit","from24bit","from32bit","then","pngBuffer","isICO","ArrayBuffer","noConflict","this","bitArray","toDividableBy4","index","dv","icoWidth","getUint8","icoHeight","icoOffset","getUint32","icoBit","icoColorsOffset","icoColorsCount","icoXorOffset","icoAndOffset","colorCount","colors","xor","slice","and","push","of8","color","of1","xorLine","andLine","Uint8ClampedArray","h","w","of4","num","buff","byteLength","toString","split","el","parseInt"],"mappings":"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C,MAAM,IAAI3D,IAAI,SAAA4D,GACvB,MAAOC,UAASD,EAAI,OASxBd,IAAG,SAAErE,GAGH,IAAK,GAFC+E,GAAO,GAAInF,YAAWI,GACtBqC,KACGvC,EAAI,EAAGA,EAAIiF,EAAKC,WAAYlF,IACnCuC,EAAI+B,KAAKW,EAAKjF,GAEhB,OAAOuC,IAIXlD,QAAOC,QAAU6D;AFhDjB,IAAM,OFEgD,CAAC,MEFnC,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AED5D,ADFA,GHKuD,CAAC,AIHlD,QAAQ,ADFF,AAQZ,GCNiB,CDMXC,gBAAiB,SAAA4B,GAIrB,MAHIA,GAAM,IAAM,IACdA,GAAO,EAAIA,EAAM,GAEZA,EAGT3F,QAAOC,QAAU8D;ADVjB,CFAwD,GEAlD,SAAS,GAAG;;;;;;AHgBhB,AChBuD,AAMzD,IAAM,IDUE,GCVK,GAAG,SAAV,GDUI,ICVG,CDUE,ACVC,EDUC,ICVK,EAAI;ADWtB,AEnBwD,AAgB5D,ADPE,AIHA,ADTW,IFmBP,CGVD,CJGG,KDUG,GEHK,CFGD,EEHI,ADPA,GAAG,AIHf,ELae,CAAC,GEHjB,ADPsB,AIHf,CJGgB,CIHd,EJGiB,CAAC,EDUV,GEHP,CAAI,GFGU,EAAI,CEHR,EAAE,KAAK,EAAK;AFIhC,AEHJ,ADPA,AEDA,AEFE,ADFJ,IAAM,EFYE,ADPA,ECOE,AGVA,CJGC,CDUC,AGXF,CDQG,CDPC,AIHA,ELaE,CEHC,AGVA,ELaE,CIfC,CCEC,EDFE,CJeC,CAAC,AEHA,CAAC,GFGG,CAAC,CKbC,CHUC,ACRpB,AEFoB,ADF1B,CFY2B,CAAC,CCRnB,EAAE,CEFqB,CAAC,CAAC,MDFpB,CAAG,GAAG,EAAI;AJgBxB,AEHJ,ACRE,AEFA,ADFF,MFYM,AEZF,EDIE,AEFA,CDFC,CJeG,CKbD,CDFC,CDIC,ACJA,CFYG,AGVF,ELaI,AKbF,CHUG,AGVF,CDFC,CJeG,AEHA,AEZF,CFYG,CEZD,IJeM,AGXd,CHWe,AGXd,EDQgB,CAAC,CAAC,GAAG,CFGC,CAAC,GEHG,GAAG,EAAE,CAAC,IFGI,AEHA,CFGC,EEHE,CAAC,KFGK,CAAC,CAAC;AACvD,AEHJ,ACRE,AEFA,ADFA,MFYI,CEZD,CDIG,CEFD,EFEI,ACJF,CJeC,AIfA,CJeC,AKbA,CFEG,AEFF,CHUG,AEZF,ECEE,CLaC,AEHE,AGVF,ADFA,EFYI,AGVF,CLaC,AEHE,AGVF,ADFA,CDIG,ACJF,CDIG,ACJF,CCEC,ELaE,AGXE,CHWD,AGXE,CEFD,CHUG,AGVF,CHUG,ACRA,CDQC,ACRA,CHWD,CAAC,CEHG,ACRA,CAAC,CAAC,GDQG,AGVF,EAAE,CHUG,AGVF,EHUI,AGVF,CHUG,CGVD,GHUK,GAAG,CAAC;AFIjD,AEHJ,ACRE,AEFE,GDFH,GFYK,ECRE,CEFD,EFEI,CHWD,CAAC,AKbA,CFEG,AEFF,CHUG,GAAG,CFGD,CEHG,CAAC,CFGD,AGXE,CAAC,EEFA,CFEG,CHWD,AGXE,CHWD,AKbA,EHUI,ACRA,CDQC,ACRA,CEFD,CHUG,AGVF,CLaC,AGXE,AEFF,CLaC,AGXE,AEFF,CHUG,ACRA,AEFF,KHUO,GAAG,AGVF,CAAC,CHUG,AGVF,CAAC,CHUG,AGVH,CAAE,GHUK,CAAC,CAAC,AGVF,CAAC,CAAC,CAAC,CAAC,CAAC;ALcrD,AEHJ,ACRE,ACJF,KCEG,CHUG,ECRE,CCJD,CJeG,EEHE,AEZF,CJeG,AIfF,EFYI,ACRA,CHWC,CEHC,CAAC,ACRA,IHWI,CAAC,IEHI,CAAC,ICRI,CHWC,AGXA,CHWC,EGXE,CDQC,ACRA,CHWC,CAAC,CAAC,AEHA,EAAE,ACRA,EDQE,CCRC,GDQG,ACRA,CDQC,ACRA,CDQC,ECRE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AHYpE,AEHJ,ACRE,AEFA,CDFH,CAAC,IFYM,ECRE,EHWE,CKbD,GAAG,CFEG,AEFF,GFEK,CHWC,CKbD,CHUG,AGVF,CLaG,CKbD,CHUG,AGVF,CLaG,AKbF,CLaG,AEHA,CAAC,CGVD,CAAC,GFEK,CAAC,GDQG,ACRA,CDQC,ACRA,EDQE,AGVZ,ELac,AKbZ,CLaa,AEHA,ACRA,CEFT,EFEY,CAAC,CHWC,AEHA,ACRA,CHWC,EEHE,ACRA,CAAC,CDQC,ACRA,CHWC,CEHC,CFGC,GEHG,CAAC,CFGC,CAAC,CEHC,EAAE,CAAC,EFGE,CAAC,CAAC,KEHK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AFIxF,AEHJ,ACRE,AEFE,MHUE,ECRA,EHWI,GGXC,AEFA,GFEG,CAAC,CHWG,AGXF,EDQI,CFGC,AKbF,CAAC,CHUG,CGVD,CHUG,CAAC,AGVF,CAAC,CAAC,CAAC,CLaG,CAAC,IAAI,AEHA,CFGC,AEHA,SAAS,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;AFItD,AEHJ,ACRE,ACJJ,KCEK,CHUG,AGVF,ADFA,CCEC,ADFA,CDIG,GHWC,CGXG,ECJA,CJeC,AGXE,CHWD,CIfC,CFYG,CFGD,AGXE,CHWD,CEHG,CFGD,CAAC,GAAG,KIfK,CAAC,EJeE,CAAC,CEHG,ACRA,CAAC,EDQE,CCRC,CHWD,AGXE,EHWA,CAAC,EAAE,AGXE,EHWA,CGXG,GAAG,CDQC,ACRA,GDQG,CAAC,CAAC,CCRC,GAAG,CAAC,CAAC,CAAC;AHY3D,AEHN,ACRE,GEFD,GHUK,GCRC,IAAI,CAAC,EHWE,CAAC,AGXA,CHWC,AEHE,CFGD,CGXC,CDQG,ACRF,CHWC,IAAI,CAAC,AGXA,CHWC,CAAC,CAAC,AGXA,CAAC,EDQI,ACRF,CAAC,EDQI,ECRA,CAAC,EAAE,CAAC,EAAE,EAAE,IDQM,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;ACPlF,OHWC,IGXI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;AHYpC,AEHJ,ACRM,MDQA,GFGC,AEHE,CFGD,EEHI,CCRD,GAAG,GAAG,CAAC,EHWE,CAAC,GGXG,CAAC,GAAG,CAAC,CHWC,AGXA,EHWE,CAAC,AGXA,EHWE,CAAC,CAAC,CAAC,EGXE,GAAG,CAAC,CAAC,CAAC,CAAC;AHY3C,AEHF,ACRI,SDQC,EAAE,CCRC,CHWC,AGXA,CHWC,IGXI,CDQC,ACRA,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GHWG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AEFpD,ADRA,AEAI,KHWH,CAAC,CAAC,ECXE,CCQC,EAAE,ACRA,CAAC,KAAK,GDQG,ACRA,CAAC,CAAC,GFAZ,AEAe,KAAK,CFAd,AEAe,CAAC,CFAd,AEAe,CAAC;ADS/B,ADRE,AEAE,GHWL,OCXS,EEAA,CAAC,CDQC,CDRG,CCQD,EAAE,ADRE,AEAF,CDQC,ECRE,CFAG,AEAF,CAAC,GAAG,CDQC,CAAC,CAAC,CDRG,CAAC,AEAF,CDQC,ACRA,CAAC,CAAC,CAAC,EDQE,ADRE,CAAC,CAAC,CCQD,EAAE,CAAC;AACvC,ADRE,AEAE,CHWP,CAAC,KEHK,EAAE,CDRC,EEAE,CAAC,EDQE,ADRA,CAAC,EEAE,GAAG,CAAC,CAAC,EFAE,CAAC,AEAA,CFAC,EAAE,AEAA,CAAC,CAAC,EFAE,CAAC,AEAA,KFAK,CAAC,CEAC,GFAG,AEAA,CAAC,CAAC,GFAG,AEAA,CFAC,AEAA,GAAG,GAAG,CAAC,EFAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;ACSxE,ADRI,AEAA,UDQE,EAAE,CCRC,CDQC,CDRC,EEAE,CAAC,CAAC,GFAG,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;ADY9D,AEHI,AGXF,KAAG,CLcC,CAAC,AEHA,ADRA,AEAA,EDQE,KFGK,CEHC,CAAC,CFGC,GAAG,AKdb,CLcc,AEHA,CAAC,IGXT,EAAE,MHWmB,EAAE,YAAY,CAAC;AAC7C,AGXA,KFGC,EDQE,CGXG,CHWD,GGXK,GHWC,AGXE,CHWD,GGXK,EHWA,CAAC,OGXS,CAAC,IHWE,EAAE,AGXE,CAAC,CAAC,UHWQ,GAAG,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;ACPxF,AEHA,GHWD,CAAC,IGXI,GFGG,AEHA,GAAG,CFGC,CAAC,AEHA,CAAC;AHYf,ADXK,AAGD,AIHF,GFGD,IDQI,EGXE,CJGG,CCQD,CAAC,CGXC,CJGG,AIHF,CHWC,CAAC,CDRG,AIHF,CHWC,AGXA,CHWC,CGXC,CAAC,CHWC,EDRI,AIHF,CJGG,GAAG,AIHF,CJGG,AIHF,KJGO,CAAC,CCQD,EAAE,CAAC,AGXA,CJGG,CCQD,ADRE,AIHF,CAAC,CHWC,CGXC,EAAE,IJGM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;ACSpE,ADRI,AIHF,OHWC,CAAC,CGXC,GJGG,CIHC,CHWC,AGXA,CHWC,CDRC,EIHE,CHWC,CAAC,CGXC,IAAI,CAAC,CAAC,CHWC,ADRZ,AIHY,CHWC,ADRZ,AIHY,GHWG,CAAC,IGXI,CAAC,CHWC,CAAC,AGXA,CAAC,CAAA,CAAE,EHWE,CAAC,EGXE,CAAC,CAAC,CAAC,CAAC,CAAC,QHWQ,GAAG,CAAC,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;ADP9F,GCQL,EGXE,OJGS,GAAG,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAClC,AIHJ,WAAO,GAAG,CAAC,CJGC,GAAG,CAAC,AIHA,CAAC,EJGE,AIHA,CAAC,CAAC,GAAG,CAAC,UAAA,EAAE,EAAI;AHYjC,ADRQ,AIHJ,SHWG,GAAG,CAAC,AGXA,EJGE,CAAC,KIHK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AJIlB,CCQX,CAAC,GGXG,CAAC,CAAC,SJGS,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC/B,GIHT,eJGe;ACSlB,ADTkB,AACR,MCQJ,CAAC,OAAO,CDRC,CAAC,CCQC,UAAU,CAAC;ADPhB,AEDV,UAAQ,MFCM,GAAG,SAAS,CAAC,CEDjB,GAAG,EAAE,EFCoB,CAAC,GAAG,CAAC,CAAC;AAC/B,AEDR,QAAI,KAAK,KFCK,OEDL,CAAC;AFCI,AACR,AEDN,QAAM,GAAG,GAAG,CFCD,CAAC,MEDQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AFE1B,AEDR,QAAM,GAAG,GAAG,EFCA,GAAG,GEDK,CAAC,GAAG,CAAC,CFCD,CAAC,CEDG,CAAC,GAAG,CAAC,CAAC,CFCD,CAAC,GAAG,CAAC,CAAC;AAC/B,AEDR,QAAM,OAAO,GFCC,AEDE,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AFCxD,AACR,AEDN,QAAM,OFCK,AEDE,EFCA,CEDG,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AFE1C,AEDR,AEHF,KAAG,GFGG,KAAK,GFCG,AEDA,CAAC,CAAC,CFCC,CIJZ,MAAM,EJIe,AIJb,CJIc,SAAS,CAAC,GAAG,CAAC,CAAC;AAChC,AEDR,AEHA,QFGM,AEHA,IFGI,AEHA,GFGG,AEHA,GJIC,CEDG,AEHA,UAAU,CAAC,MFGM,AEHA,CFGC,AEHA,CAAC,EFGE,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AFCjD,AACR,AEDN,AEHA,QAAM,CFGD,EEHI,EFGA,CAAC,AEHE,CJID,CIJG,CJID,AEDA,AEHE,GFGC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AFElC,AEDN,AEHF,SAAK,EFGE,EEHE,CAAC,CFGC,CFCC,AEDA,CEHC,CAAC,CJIC,AEDA,CAAC,AEHA,CAAC,CFGC,CAAC,CEHC,EFGE,EFCE,AIJA,CJIC,AEDA,AEHA,CFGC,KAAK,EAAE,CFCC,AEDA,CFCC,AIJA,CFGC,CEHC,CJIC,AEDA,AEHA,CJIC,CAAC,AIJA,EAAE;AJKlC,AEDJ,AEHF,SAAG,CAAC,GFGG,CEHC,CAAC,CFGC,EFCE,CEDC,AEHA,CFGC,AEHA,CAAC,CAAC,CAAC,CAAC,EFGE,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AFC/B,AEAV,KEHH,IJII,GEDG,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AFEvB,AEDA,AEHJ,WAAO,CFGC,CAAC,CEHC,CJIC,AIJA,GFGG,GFCG,AEDA,CFCC,AEDA,CAAC,EFCE,CAAC,AEDA,KAAK,CFCC,AEDA,CFCC,AEDA,CAAC,CAAC;AFEzB,AEDF,GEHL,SFGS,CAAC,EFCE,EAAE,CEDC,EFCE,CAAC,AEDA,CAAC,CAAC,GFCG,AEDA,KAAK,CAAC,CAAC,CAAC,CAAC;AFEzB,AEDF,CEHP,CAAC,UFGU,CAAC,GFCG,EAAE,AEDA,GF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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconst PNG = require('./png');\nconst ico = require('../ico');\n\nconst ICO = ico({ PNG });\n\nmodule.exports = ICO;\n","'use strict';\n\nconst dataURLToArrayBuffer = dataURL => {\n  const string = global.atob(dataURL.replace(/.+,/, ''));\n  const view = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\nconst PNG = {\n  /**\n   * create png from imgData.data\n   * @access private\n   * @param {Object} image data\n   * @param {Number} image.width img width\n   * @param {Number} image.height img height\n   * @param {Uint8ClampedArray} image.data same as imageData.data\n   * @returns {ArrayBuffer} png\n   */\n  encode (image) {\n    return new Promise(resolve => {\n      const data = image.data;\n      const canvas = global.document.createElement('canvas');\n      canvas.width = image.width;\n      canvas.height = image.height;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.createImageData(image.width, image.height);\n      const dataData = imageData.data;\n      for (let i = 0; i < dataData.length; i++) {\n        dataData[i] = data[i];\n      }\n      ctx.putImageData(imageData, 0, 0);\n      resolve(dataURLToArrayBuffer(canvas.toDataURL()));\n    });\n  }\n};\n\nmodule.exports = PNG;\n","'use strict';\n\nconst extractOne = require('./extract-one');\nconst imageData = require('./image-data');\n\nconst range = n => new Array(n).fill(0).map((_, i) => i);\n\n/**\n* @class ICO\n*/\n\nconst factory = config => {\n  const previousICO = global.ICO;\n  const ICO = {\n    /**\n     * Parse ICO and return some PNGs.\n     * @memberof ICO\n     * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n     * @returns {Promise<Object[]>} Resolves to array of parsed ICO.\n     *   * `width` **Number** - Image width.\n     *   * `height` **Number** - Image height.\n     *   * `bit` **Number** - Image bit depth.\n     *   * `buffer` **ArrayBuffer** - Image buffer.\n     */\n    parse (buffer) {\n      const icoDv = new DataView(buffer);\n      if (icoDv.getUint16(0, true) !== 0 || icoDv.getUint16(2, true) !== 1) {\n        return Promise.reject(new Error('buffer is not ico'));\n      }\n      // make single image icon\n      // let idCount = icoDv.getUint16(4, true);\n      const icos = Promise.all(range(icoDv.getUint16(4, true)).map(i => {\n        let data;\n        const ico = extractOne(buffer, i);\n        switch (ico.bit) { // eslint-disable-line default-case\n          case 1:\n            data = imageData.from1bit(ico);\n            break;\n          case 4:\n            data = imageData.from4bit(ico);\n            break;\n          case 8:\n            data = imageData.from8bit(ico);\n            break;\n          case 24:\n            data = imageData.from24bit(ico);\n            break;\n          case 32:\n            data = imageData.from32bit(ico);\n            break;\n        }\n        return config.PNG.encode({\n          width: ico.width,\n          height: ico.height,\n          data\n        }).then(pngBuffer => {\n          return {\n            bit: ico.bit,\n            width: ico.width,\n            height: ico.height,\n            buffer: pngBuffer\n          };\n        });\n      }));\n      return icos;\n    },\n    /**\n     * Check the ArrayBuffer is valid ICO.\n     * @memberof ICO\n     * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n     * @returns {Boolean} True if arg is ICO.\n     */\n    isICO (buffer) {\n      if (!(buffer instanceof ArrayBuffer)) {\n        return false;\n      }\n      const icoDv = new DataView(buffer);\n      // idReserved = icoDv.getUint16(0, true)\n      // idType = icoDv.getUint16(0, true)\n      return icoDv.getUint16(0, true) === 0 && icoDv.getUint16(2, true) === 1;\n    },\n    /**\n     * No conflict.\n     * @memberof ICO\n     * @returns {ICO} `ICO` Object.\n     */\n    noConflict () {\n      global.ICO = previousICO;\n      return this;\n    }\n  };\n  return ICO;\n};\n\nmodule.exports = factory;\n","'use strict';\n\nconst bitArray = require('./utils/bit-array');\nconst toDividableBy4 = require('./utils/to-dividable-by-4');\n\n/**\n * extract an icon from buffer\n * @access private\n * @param {ArrayBuffer} buffer ico buffer\n * @param {number} index index of icon\n * @returns {Object} ico parsed ico\n * @returns {Number} ico.width image width\n * @returns {Number} ico.height image height\n * @returns {Number} ico.colorCount color count\n * @returns {Number} ico.bit bit depth\n * @returns {Array[]} ico.colors color palette\n * @returns {ArrayBuffer} ico.xor xor image\n * @returns {ArrayBuffer} ico.and xor and\n */\nconst extractOne = (buffer, index) => {\n  const dv = new DataView(buffer);\n  const icoWidth = dv.getUint8(6 + index * 16) || 256;\n  const icoHeight = dv.getUint8(7 + index * 16) || 256;\n  const icoOffset = dv.getUint32(18 + index * 16, true);\n  const icoBit = dv.getUint16(icoOffset + 14, true);\n  const icoColorsOffset = dv.getUint32(18 + index * 16, true) + dv.getUint32(icoOffset, true);\n  const icoColorsCount = dv.getUint32(icoOffset + 32, true);\n  const icoXorOffset = icoColorsOffset + icoColorsCount * 4;\n  const icoAndOffset = icoXorOffset + toDividableBy4(icoWidth * icoBit / 8) * icoHeight;\n\n  const ico = {\n    width: icoWidth,\n    height: icoHeight,\n    colorCount: dv.getUint8(8 + index * 16),\n    bit: icoBit,\n    colors: [],\n    xor: buffer.slice(icoXorOffset, icoAndOffset),\n    and: buffer.slice(icoAndOffset, icoAndOffset + toDividableBy4(icoWidth / 8) * icoHeight)\n  };\n  for (let i = 0; i < icoColorsCount; i++) {\n    ico.colors.push(bitArray.of8(buffer.slice(icoColorsOffset + i * 4, icoColorsOffset + i * 4 + 4)));\n  }\n\n  return ico;\n};\n\nmodule.exports = extractOne;\n","'use strict';\n\nconst bitArray = require('./utils/bit-array');\nconst toDividableBy4 = require('./utils/to-dividable-by-4');\n\nconst imageData = {\n  /**\n   * make 1bit image imageData.data\n   * @access private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from1bit (ico) {\n    let color;\n    const xor = bitArray.of1(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        color = ico.colors[xor[h * xorLine + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 4bit image imageData.data\n   * @access private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from4bit (ico) {\n    let color;\n    const xor = bitArray.of4(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        color = ico.colors[xor[h * xorLine + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 8bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, colors, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from8bit (ico) {\n    let color;\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        color = ico.colors[xor[h * xorLine + w]];\n        data[index] = color[2];\n        data[index + 1] = color[1];\n        data[index + 2] = color[0];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 24bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from24bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        data[index] = xor[(h * xorLine + w) * 3 + 2];\n        data[index + 1] = xor[(h * xorLine + w) * 3 + 1];\n        data[index + 2] = xor[(h * xorLine + w) * 3];\n        data[index + 3] = and[h * andLine + w] ? 0 : 255;\n        index += 4;\n      }\n    }\n    return data;\n  },\n  /**\n   * make 32bit image imageData.data\n   * @private\n   * @param {Object} ico should have width, height, bit, xor, and\n   * @returns {Uint8ClampedArray} imageData.data\n   */\n  from32bit (ico) {\n    const xor = new Uint8Array(ico.xor);\n    const and = bitArray.of1(ico.and);\n    const xorLine = toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n    const andLine = toDividableBy4(ico.width / 8) * 8;\n    let index = 0;\n    const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n    for (let h = ico.height - 1; h >= 0; h--) {\n      for (let w = 0; w < ico.width; w++) {\n        data[index] = xor[(h * xorLine + w) * 4 + 2];\n        data[index + 1] = xor[(h * xorLine + w) * 4 + 1];\n        data[index + 2] = xor[(h * xorLine + w) * 4];\n        data[index + 3] = and[h * andLine + w] === 1 || xor[(h * xorLine + w) * 4 + 3] === 1 ? 0 : xor[(h * xorLine + w) * 4 + 3] > 1 ? xor[(h * xorLine + w) * 4 + 3] : 255; // eslint-disable-line no-nested-ternary\n        index += 4;\n      }\n    }\n    return data;\n  }\n};\n\nmodule.exports = imageData;\n","'use strict';\n\n/**\n * Make number dividable by 4\n * @access private\n * @param {Number} num number\n * @returns {Number} number dividable by 4\n */\nconst toDividableBy4 = num => {\n  if (num % 4 !== 0) {\n    num += 4 - num % 4;\n  }\n  return num;\n};\n\nmodule.exports = toDividableBy4;\n","'use strict';\n\nconst bitArray = {\n  /**\n   * convert ArrayBuffer to 1bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of1 (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += ('000000000' + buff[i].toString(2)).slice(-8);\n    }\n    return bit.split('').map(el => {\n      return parseInt(el, 2);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 4bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of4 (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += ('00' + buff[i].toString(16)).slice(-2);\n    }\n    return bit.split('').map(el => {\n      return parseInt(el, 16);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 8bit Array\n   * @access private\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  of8 (buffer) {\n    const buff = new Uint8Array(buffer);\n    const bit = [];\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit.push(buff[i]);\n    }\n    return bit;\n  }\n};\n\nmodule.exports = bitArray;\n"]}