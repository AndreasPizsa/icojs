{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ico.js","src/extractone.js","src/util.js","src/png.js"],"names":["extractOne","require","PNG","util","make1bitImageData","ico","color","undefined","xor","to1bitArray","and","xorLine","toDividableBy4","width","bit","andLine","index","data","Uint8ClampedArray","height","h","w","colors","make4bitImageData","to4bitArray","make8bitImageData","Uint8Array","make24bitImageData","make32bitImageData","previousICO","global","ICO","parse","buffer","icoDv","DataView","getUint16","Error","icos","i","push","encode","isICO","ArrayBuffer","noConflict","this","module","exports","dv","icoWidth","getUint8","icoHeight","icoOffset","getUint32","icoBit","icoColorsOffset","icoColorsCount","icoXorOffset","icoAndOffset","colorCount","slice","to8bitArray","buff","byteLength","toString","split","map","el","parseInt","num","createCanvas","document","canvas","createElement","Canvas","atob","str","Buffer","dataURLToArrayBuffer","dataURL","string","replace","bytes","length","charCodeAt","image","ctx","getContext","imageData","createImageData","dataData","putImageData","toDataURL"],"mappings":"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,CAAC,CAAC,GAAG,EDHE,CAAC,ECGE,CDHC,CAAC,CCGC,EAAE,CAAC,CDHC,GCGG,ADHA,GCGG,ADHA,CCGC,ADHA,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;ACI3E,ADHA,AGLF,IAAM,EFQE,ADHA,EGLE,GAAG,EHKE,ECGE,CDHC,CGLC,CFQC,AERA,EFQE,ADHA,CCGC,ADHA,CGLC,GAAG,IFQI,CAAC,CAAC,AERA,CAAC,EFQE,CDHC,CAAC,AGLA,GFQG,ADHA,AGLA,CHKC,ECGE,EAAE,CAAC,ADHA,GAAG,CCGC,ADHA,AGLA,CHKC,ECGE,AERA,CFQC,ADHA,CAAC,AGLA,CHKC;ACIvD,ADHA,AGLA,ADLA,MDaM,ADHF,AGLE,KHKG,CGLG,CDLD,CFUC,CCGG,ADHF,AGLE,CHKD,ECGI,EAAE,CAAC,CERC,CAAC,OFQO,CAAC,AERA,CAAC,CFQC,AERA,GFQG,ACbvB,GCK0B,CAAC,CFQC,CCbtB,EDayB,ACbvB,EDayB,EAAE,IAAI,CAAC,CAAC;AACtD,ADHA,AGLA,ADLE,MDaI,ADHA,EEVE,CCKD,CHKG,ECGE,ACbA,CFUC,AGLF,EFQI,ACbA,EDaE,ADHA,CCGC,CERD,ADLE,CCKD,GAAG,EAAE,EFQI,CAAC,CCbC,CAAC,GCKC,CHKG,AGLF,CHKG,AGLF,CDLG,CDaC,ACbA,CFUC,AEVA,CFUC,CCGC,EAAE,CERD,CFQG,ADHA,AGLF,GHKK,CCGC,CAAC,CAAC,ADHA,CAAC,CGLD,CAAC,CAAC,GHKK,GAAG,CAAC,CAAC,CAAC;ACI/D,ADHA,AEVE,CCKH,CAAC,IFQM,CDHD,CEVC,GFUG,AEVA,CFUC,EEVE,CFUC,CEVC,CAAC,CFUC,CAAC,ECGI,GAAG,CDHD,CCGG,CAAC,CDHD,CAAC,EAAE,CAAC,ICGM,ADHF,CCGG,ADHF,ECGI,ADHF,CAAC,ECGI,ADHF,EAAE,GCGK,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC5F,ADHE,AEVA,MDaI,GDHC,AEVA,IFUI,AEVA,CFUC,AEVA,GFUG,AEVA,CFUC,AEVA,EDaI,ADHF,AEVA,CFUC,AEVA,EDaI,CDHD,AEVA,CDaG,CAAC,CDHD,CAAC,AEVA,CAAC,IFUI,ECGI,ADHF,CCGG,ADHF,EAAE,CEVC,CFUC,CEVC,CAAC,EAAE,CDaG,CCbD,EDaI,EAAE,EAAE,IAAI,CAAC,CAAC;AAC1D,ADHI,AGLN,ADLM,ICKA,EFQE,GCbC,EFUE,EEVE,CFUC,AEVA,GFUG,CCGG,ADHF,GCGK,GDHC,AGLE,CHKD,AEVA,ECKI,CHKD,AEVA,CFUC,CAAC,EEVE,CFUC,AEVA,CAAC,CAAC,CDaG,AERhC,ADL8B,GDaK,CDHD,GAAG,CAAC,AEVA,CFUC,AEVA,CFUC,AEVA,CFUC,AEVA,CAAA,CAAE,IDaM,CCbD,CAAC,CDaG,AERhC,ADL8B,CDaG,AERpB,ADLkB,CDaG,ACbF,CAAC,KCKb,EAAE;AFS9C,ADHI,AGLJ,KDLG,CDaG,AERA,IHKE,CAAC,CGLG,GAAG,CHKD,CAAC,CCGG,CERC,CHKD,AGLE,CFQC,IDHE,CAAC,CAAC,AGLE,CHKD,AGLE,CHKD,ICGM,EERE,CFQC,AERA,IFQI,CAAC,AERA,EAAE,EAAE,CAAC,CAAC,CAAC,OFQO,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;ADFvF,AGLJ,ADLE,MCKI,IHKE,CAAC,AGLE,ADLF,GCKK,ADLF,CAAC,CFUC,EGLI,CHKD,CAAC,AEVA,CFUC,AEVA,EAAE,CFUC,AEVA,CAAC,GCKK,ADLF,CFUC,AGLE,ADLF,CFUC,CAAC,CAAC,CAAC,EGLI,CAAC,GDLT,EAAE,CCKa,CAAC,ADLV,CCKW;AFS5C,ADHI,AGLJ,ADLI,MDaE,CERD,EFQI,CDHD,CAAC,AGLA,CFQG,AERF,CDLC,ECKE,CHKC,AGLA,EAAE,CHKC,AGLA,CHKC,CAAC,AEVA,CCKC,ADLA,EFUE,AEVA,EAAE,CAAC,CCKC,ADLA,CFUC,AGLA,ADLA,CFUC,CAAC,CAAC,CAAC,EGLE,EAAE,CAAC,EAAE,EAAE;AFStC,ADHE,AGLF,KDLC,CAAC,CAAC,EDaE,AERA,CHKC,AGLA,CFQC,ADHA,AGLA,CAAC,GAAG,CHKC,GCGG,ADHA,CAAC,CAAC,AGLA,CAAC,EHKE,GAAG,CAAC,CAAC,GAAG,AGLA,CAAC,CAAC,CAAC,CAAC,GHKG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;ACInD,ADHE,GGLH,ADLA,ODaO,CDHC,CCGC,GDHG,CAAC,CAAC,ICGI;AACjB,AERF,KHKG,IGLI,KFQK,AERA,CAAC,CFQC,EAAE,CAAC,EERE,CAAC,KFQK,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;AACvC,CERH,CAAC,CHKC,ICGI,EAAE,MAAM;AACX,ADHF,SAAO,CCGC,EAAE,CDHC,CCGC,ADHA;ACIV,AERJ,CHKC,GGLK,GFQC,AERE,EFQA,CERG,KFQG,CAAC,KAAK,CAAC,YAAY,EAAE,YAAY,CAAC;AAC7C,OAAG,EAAE,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;GAC9F,CAAC;AACF,ACdA,ODcK,IAAI,CAAC,CCdC,EDcE,CAAC,EAAE,CAAC,GAAG,cAAc,ACdrB,EDcuB,CAAC,EAAE,CCdpB,CDcsB,CCdpB;ADenB,ACdA,ODcG,CAAC,ACdE,IAAI,EDcA,CAAC,ACdE,IDcE,ACdE,CDcD,IAAI,CAAC,ICdM,CAAC,MDcI,ACdE,CDcD,ACdE,CAAC,KDcG,CAAC,KAAK,CAAC,eAAe,GAAG,CAAC,GAAG,CAAC,EAAE,eAAe,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;ACbtG,GDcD,KCdK,GAAG,GAAG,EAAE,CAAC;AACb,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;ADe5C,ACdI,SDcG,ACdA,GDcG,CAAC,ACdA,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AFInD,AAQF,CCGC,CAAC,EDHI,CEXD,gBFWkB,GAAG,SAApB,iBAAiB,CAAG,GAAG,EAAI;AAC/B,AEXE,MFWE,KAAK,AEXA,GAAG,CAAC,KAAK,CAAC,EFWV,AEXY,CFWX,AEXY,CAAC,GAAG,CAAC,UAAA,EAAE,EAAI;ADenC,ADHE,AGNA,ADLI,MDcA,ADHE,CCGD,CETC,CHMG,GAAG,CEXD,CDcC,EDHI,CCGD,ADHE,IEXE,CAAC,EAAE,ECKd,ADLgB,CDcC,CAAC,ADHE,AEXF,CFWG,AEXF,CAAC,CCKf,CHMmB,CAAC,AGNlB,GHMqB,CAAC,CAAC;AACtC,AGNE,KDLC,CFWG,AEXF,CAAC,CCKG,CHMC,GAAG,AGNA,GAAG,CHMC,CAAC,GGNG,CAAC,IAAI,CAAC,EHME,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,AGNE,GDLD,GFWK,EGNE,KHMK,CGNC,EHME,CGNC,GHMG,CAAC,QGNQ,CAAC,KHMK,AGNA,CHMC,AGNA,GHMG,CAAC,CGNC,EAAE,EHME,GAAG,AGNA,CAAC,EHME,CAAC,GAAG,AGNA,CAAC,CAAC,CHMC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AAC3E,AGNE,MHMI,EGNE,GAAG,EHME,CGNC,EHME,IAAI,AGNA,CHMC,AGNA,UAAU,CAAC,GHMG,CAAC,AGNA,CAAC,CAAC,CHMC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvD,AGNE,MHME,EGNI,GHMC,GAAG,CAAC,CAAC,CGNG,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AHOnE,AGNE,MHMI,EGNE,EHME,GAAG,GGNG,CHMC,EGNE,SAAS,CAAC,IAAI,CHMC,AGNA,CHMC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/D,AGNE,OHMG,EGNE,EHME,CAAC,CGNC,CAAC,CHMC,EGNE,CHMC,AGNA,CHMC,CGNC,CAAC,GAAG,CHMC,GAAG,CAAC,EAAE,CAAC,AGNA,CAAC,GHMG,CAAC,EAAE,AGNA,CHMC,CGNC,CHMC,AGNA,EHME,AGNA,EAAE;AHO1C,AGNE,SHMG,IAAI,CAAC,AGNA,CAAC,CAAC,CHMC,AGNA,CHMC,EAAE,AGNA,CHMC,GAAG,AGNA,CAAC,CAAC,CHMC,AGNA,CHMC,AGNA,KHMK,EAAE,CAAC,EAAE,EAAE;AAClC,KGND,MHMM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,AGNF,ADNF,OCMK,CAAC,EHME,CAAC,EEZE,GFYG,CAAC,GAAG,AGNA,CAAC,IHMI,CAAC,CAAC,CAAC,CAAC,CGNC,EAAE,CAAC,EAAE,CAAC,ADNrB,CCMsB,CAAC,IDNjB,EAAE;AFajB,AGNF,ADNA,QAAM,EFYA,CAAC,AGNA,CDNG,GAAG,CFYD,GAAG,AEZE,CFYD,CAAC,GAAG,KAAK,AEZE,CFYD,AEZE,CFYD,AGNA,CHMC,AGNA,CHMC,GEZK,CAAC,CCMD,ADNE,CCMD,SAAS,EAAE,CAAC,CAAC;AHO9C,AEZF,GCMD,KDNO,EFYA,CAAC,AEZE,GAAG,EFYA,AEZE,CAAC,EFYA,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,AEZF,SAAK,CFYC,CAAC,EEZE,CAAC,EFYE,CEZC,CAAC,CFYC,CAAC,AEZA,CFYC,AEZA,GFYG,AEZA,GFYG,CAAC,AEZA,CFYC,AEZA,GFYG,OAAO,AEZA,EAAE,CFYC,AEZA,CFYC,CAAC,AEZA,EAAE,CFYC,CAAC,GAAG,GAAG,CAAC;AACjD,AEZA,SAAG,CAAC,CFYC,GEZG,CFYC,AEZA,CFYC,CAAC,EEZE,CAAC,CAAC,CAAC,CAAC,CAAC;KFanB,AEZA;AACD,GFYD,QEZQ,GAAG,CAAC;AFab,GEZC,MFYM,IAAI,CAAC;CACb;;;;;;AEPC,CCMD,CAAC,cDNc,0BAAE,GAAG,EAAE;AACnB,QAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;AFMrB,AAQF,AGPA,ADNM,IFaA,EGPA,CAAC,EDNE,IAAI,CCMC,ADNA,GCMG,ADNA,GCMG,ADNA,CFaG,AGPF,EDNE,CFaG,AEbF,CAAC,QFanB,iBAAiB,CAAa,GAAG,EAAE;AACvC,KEbG,CFaC,KAAK,YAAA,CAAC;AACV,AEbE,MFaI,GAAG,EEbA,CFaG,EEbA,CAAC,CFaG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpC,GEbC,GFaK,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,CEbD,CAAC,IFaM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AAC3E,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvD,AEbF,MFaM,AEbA,CAAC,IFaI,GAAG,AEbA,CFaC,CAAC,CEbC,IAAI,CAAC;AFcpB,MAAM,IAAI,GAAG,IAAI,iBAAiB,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/D,OAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACxC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;AAClC,WAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC,UAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACvB,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACjD,WAAK,IAAI,CAAC,CAAC;KACZ;GACF;AACD,SAAO,IAAI,CAAC;CACb;;;;;;;;AAAC,AAQF,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAa,GAAG,EAAE;AACxC,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpC,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AAC3E,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvD,MAAI,KAAK,GAAG,CAAC,CAAC;AACd,MAAM,IAAI,GAAG,IAAI,iBAAiB,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/D,OAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACxC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;AAClC,UAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,CAAC,CAAC;AAC7C,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACjD,WAAK,IAAI,CAAC,CAAC;KACZ;GACF;AACD,SAAO,IAAI,CAAC;CACb;;;;;;;;AAAC,AAQF,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAa,GAAG,EAAE;AACxC,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpC,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AAC3E,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACvD,MAAI,KAAK,GAAG,CAAC,CAAC;AACd,MAAM,IAAI,GAAG,IAAI,iBAAiB,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/D,OAAK,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACxC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;AAClC,UAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,CAAC,CAAC;AAC7C,UAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA,GAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG;AAAC,AACrK,WAAK,IAAI,CAAC,CAAC;KACZ;GACF;AACD,SAAO,IAAI,CAAC;CACb,CAAC;;AAEF,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG;;;;;AAAC,AAK/B,IAAM,GAAG,GAAG;;;;;;;;;;;AAUV,OAAK,iBAAE,MAAM,EAAE;AACb,QAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,QAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;AACpE,YAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACtC;;AAAA,AAED,QAAI,GAAG,YAAA;QAAE,IAAI,YAAA,CAAC;AACd,QAAM,IAAI,GAAG,EAAE;;AAAC,AAEhB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACjD,SAAG,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC5B,cAAQ,GAAG,CAAC,GAAG;AACb,aAAK,CAAC;AACJ,cAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC9B,gBAAM;AAAA,AACR,aAAK,CAAC;AACJ,cAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC9B,gBAAM;AAAA,AACR,aAAK,CAAC;AACJ,cAAI,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;AAC9B,gBAAM;AAAA,AACR,aAAK,EAAE;AACL,cAAI,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAC/B,gBAAM;AAAA,AACR,aAAK,EAAE;AACL,cAAI,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;AAC/B,gBAAM;AAAA,OACT;AACD,UAAI,CAAC,IAAI,CAAC;AACR,WAAG,EAAE,GAAG,CAAC,GAAG;AACZ,aAAK,EAAE,GAAG,CAAC,KAAK;AAChB,cAAM,EAAE,GAAG,CAAC,MAAM;AAClB,cAAM,EAAE,GAAG,CAAC,MAAM,CAAC;AACjB,eAAK,EAAE,GAAG,CAAC,KAAK;AAChB,gBAAM,EAAE,GAAG,CAAC,MAAM;AAClB,cAAI,EAAJ,IAAI;SACL,CAAC;OACH,CAAC,CAAC;KACJ;AACD,WAAO,IAAI,CAAC;GACb;;;;;;;AAMD,OAAK,iBAAE,MAAM,EAAE;AACb,QAAI,EAAE,MAAM,YAAY,WAAW,CAAA,AAAC,EAAE;AACpC,aAAO,KAAK,CAAC;KACd;AACD,QAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;;;AAAC,AAGnC,WAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;GACzE;;;;;;AAKD,YAAU,wBAAI;AACZ,UAAM,CAAC,GAAG,GAAG,WAAW,CAAC;AACzB,WAAO,IAAI,CAAC;GACb;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;AACrB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconst extractOne = require('./extractone');\nconst PNG = require('./png');\nconst util = require('./util');\n\n/**\n * make 1bit image imageData.data\n * @private\n * @param {Object} ico should have width, height, bit, colors, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nconst make1bitImageData = function (ico) {\n  let color;\n  const xor = util.to1bitArray(ico.xor);\n  const and = util.to1bitArray(ico.and);\n  const xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  const andLine = util.toDividableBy4(ico.width / 8) * 8;\n  let index = 0;\n  const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (let h = ico.height - 1; h >= 0; h--) {\n    for (let w = 0; w < ico.width; w++) {\n      color = ico.colors[xor[h * xorLine + w]];\n      data[index] = color[2];\n      data[index + 1] = color[1];\n      data[index + 2] = color[0];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 4bit image imageData.data\n * @private\n * @param {Object} ico should have width, height, bit, colors, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nconst make4bitImageData = ico => {\n  let color;\n  const xor = util.to4bitArray(ico.xor);\n  const and = util.to1bitArray(ico.and);\n  const xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  const andLine = util.toDividableBy4(ico.width / 8) * 8;\n  let index = 0;\n  const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (let h = ico.height - 1; h >= 0; h--) {\n    for (let w = 0; w < ico.width; w++) {\n      color = ico.colors[xor[h * xorLine + w]];\n      data[index] = color[2];\n      data[index + 1] = color[1];\n      data[index + 2] = color[0];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 8bit image imageData.data\n * @private\n * @param {Object} ico should have width, height, bit, colors, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nconst make8bitImageData = function (ico) {\n  let color;\n  const xor = new Uint8Array(ico.xor);\n  const and = util.to1bitArray(ico.and);\n  const xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  const andLine = util.toDividableBy4(ico.width / 8) * 8;\n  let index = 0;\n  const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (let h = ico.height - 1; h >= 0; h--) {\n    for (let w = 0; w < ico.width; w++) {\n      color = ico.colors[xor[h * xorLine + w]];\n      data[index] = color[2];\n      data[index + 1] = color[1];\n      data[index + 2] = color[0];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 24bit image imageData.data\n * @private\n * @param {Object} ico should have width, height, bit, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nconst make24bitImageData = function (ico) {\n  const xor = new Uint8Array(ico.xor);\n  const and = util.to1bitArray(ico.and);\n  const xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  const andLine = util.toDividableBy4(ico.width / 8) * 8;\n  let index = 0;\n  const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (let h = ico.height - 1; h >= 0; h--) {\n    for (let w = 0; w < ico.width; w++) {\n      data[index] = xor[(h * xorLine + w) * 3 + 2];\n      data[index + 1] = xor[(h * xorLine + w) * 3 + 1];\n      data[index + 2] = xor[(h * xorLine + w) * 3];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 32bit image imageData.data\n * @private\n * @param {Object} ico should have width, height, bit, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nconst make32bitImageData = function (ico) {\n  const xor = new Uint8Array(ico.xor);\n  const and = util.to1bitArray(ico.and);\n  const xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  const andLine = util.toDividableBy4(ico.width / 8) * 8;\n  let index = 0;\n  const data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (let h = ico.height - 1; h >= 0; h--) {\n    for (let w = 0; w < ico.width; w++) {\n      data[index] = xor[(h * xorLine + w) * 4 + 2];\n      data[index + 1] = xor[(h * xorLine + w) * 4 + 1];\n      data[index + 2] = xor[(h * xorLine + w) * 4];\n      data[index + 3] = and[h * andLine + w] === 1 || xor[(h * xorLine + w) * 4 + 3] === 1 ? 0 : xor[(h * xorLine + w) * 4 + 3] > 1 ? xor[(h * xorLine + w) * 4 + 3] : 255; // eslint-disable-line no-nested-ternary\n      index += 4;\n    }\n  }\n  return data;\n};\n\nconst previousICO = global.ICO;\n\n/**\n * @class ICO\n */\nconst ICO = {\n  /**\n   * Parse ICO and return some PNGs.\n   * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n   * @returns {Object[]} Array of parsed ICO.\n   *   * `width` **Number** - Image width.\n   *   * `height` **Number** - Image height.\n   *   * `bit` **Number** - Image bit depth.\n   *   * `buffer` **ArrayBuffer** - Image buffer.\n   */\n  parse (buffer) {\n    const icoDv = new DataView(buffer);\n    if (icoDv.getUint16(0, true) !== 0 || icoDv.getUint16(2, true) !== 1) {\n      throw new Error('buffer is not ico');\n    }\n    // make single image icon\n    let ico, data;\n    const icos = [];\n    // let idCount = icoDv.getUint16(4, true);\n    for (let i = 0; i < icoDv.getUint16(4, true); i++) {\n      ico = extractOne(buffer, i);\n      switch (ico.bit) { // eslint-disable-line default-case\n        case 1:\n          data = make1bitImageData(ico);\n          break;\n        case 4:\n          data = make4bitImageData(ico);\n          break;\n        case 8:\n          data = make8bitImageData(ico);\n          break;\n        case 24:\n          data = make24bitImageData(ico);\n          break;\n        case 32:\n          data = make32bitImageData(ico);\n          break;\n      }\n      icos.push({\n        bit: ico.bit,\n        width: ico.width,\n        height: ico.height,\n        buffer: PNG.encode({\n          width: ico.width,\n          height: ico.height,\n          data\n        })\n      });\n    }\n    return icos;\n  },\n  /**\n   * Check the ArrayBuffer is valid ICO.\n   * @param {ArrayBuffer} buffer The ArrayBuffer object contain the TypedArray of a ICO file.\n   * @returns {Boolean} True if arg is ICO.\n   */\n  isICO (buffer) {\n    if (!(buffer instanceof ArrayBuffer)) {\n      return false;\n    }\n    const icoDv = new DataView(buffer);\n    // idReserved = icoDv.getUint16(0, true)\n    // idType = icoDv.getUint16(0, true)\n    return icoDv.getUint16(0, true) === 0 && icoDv.getUint16(2, true) === 1;\n  },\n  /**\n   * No conflict.\n   * @returns {ICO} `ICO` Object.\n   */\n  noConflict () {\n    global.ICO = previousICO;\n    return this;\n  }\n};\n\nmodule.exports = ICO;\nglobal.ICO = ICO;\n","'use strict';\n\nconst util = require('./util');\n\n/**\n * extract an icon from buffer\n * @param {ArrayBuffer} buffer ico buffer\n * @param {number} index index of icon\n * @returns {Object} ico parsed ico\n * @returns {Number} ico.width image width\n * @returns {Number} ico.height image height\n * @returns {Number} ico.colorCount color count\n * @returns {Number} ico.bit bit depth\n * @returns {Array[]} ico.colors color palette\n * @returns {ArrayBuffer} ico.xor xor image\n * @returns {ArrayBuffer} ico.and xor and\n */\nconst extractOne = function (buffer, index) {\n  const dv = new DataView(buffer);\n  const icoWidth = dv.getUint8(6 + index * 16) || 256;\n  const icoHeight = dv.getUint8(7 + index * 16) || 256;\n  const icoOffset = dv.getUint32(18 + index * 16, true);\n  const icoBit = dv.getUint16(icoOffset + 14, true);\n  const icoColorsOffset = dv.getUint32(18 + index * 16, true) + dv.getUint32(icoOffset, true);\n  const icoColorsCount = dv.getUint32(icoOffset + 32, true);\n  const icoXorOffset = icoColorsOffset + icoColorsCount * 4;\n  const icoAndOffset = icoXorOffset + util.toDividableBy4(icoWidth * icoBit / 8) * icoHeight;\n\n  const ico = {\n    width: icoWidth,\n    height: icoHeight,\n    colorCount: dv.getUint8(8 + index * 16),\n    bit: icoBit,\n    colors: [],\n    xor: buffer.slice(icoXorOffset, icoAndOffset),\n    and: buffer.slice(icoAndOffset, icoAndOffset + util.toDividableBy4(icoWidth / 8) * icoHeight)\n  };\n  for (let i = 0; i < icoColorsCount; i++) {\n    ico.colors.push(util.to8bitArray(buffer.slice(icoColorsOffset + i * 4, icoColorsOffset + i * 4 + 4)));\n  }\n\n  return ico;\n};\n\nmodule.exports = extractOne;\n","'use strict';\n\nconst util = {\n  /**\n   * convert ArrayBuffer to 1bit Array\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  to1bitArray (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += ('000000000' + buff[i].toString(2)).slice(-8);\n    }\n    return bit.split('').map(el => {\n      return parseInt(el, 2);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 4bit Array\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  to4bitArray (buffer) {\n    const buff = new Uint8Array(buffer);\n    let bit = '';\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit += ('00' + buff[i].toString(16)).slice(-2);\n    }\n    return bit.split('').map(el => {\n      return parseInt(el, 16);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 8bit Array\n   * @param {ArrayBuffer} buffer buffer\n   * @returns {Array} bits array\n   */\n  to8bitArray (buffer) {\n    const buff = new Uint8Array(buffer);\n    const bit = [];\n    for (let i = 0; i < buff.byteLength; i++) {\n      bit.push(buff[i]);\n    }\n    return bit;\n  },\n  /**\n   * Make number dividable by 4\n   * @param {Number} num number\n   * @returns {Number} number dividable by 4\n   */\n  toDividableBy4 (num) {\n    if (num % 4 !== 0) {\n      num += 4 - num % 4;\n    }\n    return num;\n  }\n};\n\nmodule.exports = util;\n","'use strict';\n\nconst createCanvas = global.document ? function (width, height) {\n  const canvas = global.document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n} : function (width, height) {\n  const Canvas = require('canvas');\n  return new Canvas(width, height);\n};\n\nconst atob = global.atob ? global.atob : function (str) {\n  const Buffer = require('buffer').Buffer;\n  return new Buffer(str, 'base64').toString('binary');\n};\n\nconst dataURLToArrayBuffer = function (dataURL) {\n  const string = atob(dataURL.replace(/.+,/, ''));\n  const bytes = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    bytes[i] = string.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\nconst PNG = {\n  /**\n   * create png from imgData.data\n   * @param {Object} image data\n   * @param {Number} image.width img width\n   * @param {Number} image.height img height\n   * @param {Uint8ClampedArray} image.data same as imageData.data\n   * @returns {ArrayBuffer} png\n   */\n  encode (image) {\n    const data = image.data;\n    const canvas = createCanvas(image.width, image.height);\n    const ctx = canvas.getContext('2d');\n    const imageData = ctx.createImageData(image.width, image.height);\n    const dataData = imageData.data;\n    for (let i = 0; i < dataData.length; i++) {\n      dataData[i] = data[i];\n    }\n    ctx.putImageData(imageData, 0, 0);\n    return dataURLToArrayBuffer(canvas.toDataURL());\n  }\n  /**\n   * create imgData.data from png\n   * @param {ArrayBuffer} buffer png\n   * @returns {Object} data\n   * @returns {Number} image.width\n   * @returns {Number} image.height\n   * @returns {Uint8ClampedArray} image.data\n   */\n  // decode: function (buffer) {\n  // }\n};\n\nmodule.exports = PNG;\n"]}