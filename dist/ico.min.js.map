{"version":3,"sources":["ico.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","global","extractOne","PNG","util","make1bitImageData","ico","color","xor","to1bitArray","and","xorLine","toDividableBy4","width","bit","andLine","index","data","Uint8ClampedArray","height","h","w","colors","make4bitImageData","to4bitArray","make8bitImageData","Uint8Array","make24bitImageData","make32bitImageData","previousICO","ICO","isICO","buffer","ArrayBuffer","icoDv","DataView","getUint16","parse","icos","push","encode","noConflict","this","self","window","./extractone","./png","./util",2,"dv","icoWidth","getUint8","icoHeight","icoOffset","getUint32","icoBit","icoColorsOffset","icoColorsCount","icoXorOffset","icoAndOffset","colorCount","slice","to8bitArray",3,"createCanvas","document","canvas","createElement","Canvas","atob","str","Buffer","toString","dataURLToArrayBuffer","dataURL","string","replace","bytes","charCodeAt","image","ctx","getContext","imageData","createImageData","dataData","putImageData","toDataURL","undefined",4,"buff","byteLength","split","map","el","parseInt","num"],"mappings":"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","file":"ico.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n/* jshint node: true */\n\n'use strict';\n\nvar extractOne = require('./extractone');\nvar PNG = require('./png');\nvar util = require('./util');\n\n/**\n * make 1bit image imageData.data\n * @param {Object} ico should have width, height, bit, colors, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nvar make1bitImageData = function (ico) {\n  var color;\n  var xor = util.to1bitArray(ico.xor);\n  var and = util.to1bitArray(ico.and);\n  var xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  var andLine = util.toDividableBy4(ico.width / 8) * 8;\n  var index = 0;\n  var data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (var h = ico.height - 1; h >= 0; h--) {\n    for (var w = 0; w < ico.width; w++) {\n      color = ico.colors[xor[h * xorLine + w]];\n      data[index] = color[2];\n      data[index + 1] = color[1];\n      data[index + 2] = color[0];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 4bit image imageData.data\n * @param {Object} ico should have width, height, bit, colors, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nvar make4bitImageData = function (ico) {\n  var color;\n  var xor = util.to4bitArray(ico.xor);\n  var and = util.to1bitArray(ico.and);\n  var xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  var andLine = util.toDividableBy4(ico.width / 8) * 8;\n  var index = 0;\n  var data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (var h = ico.height - 1; h >= 0; h--) {\n    for (var w = 0; w < ico.width; w++) {\n      color = ico.colors[xor[h * xorLine + w]];\n      data[index] = color[2];\n      data[index + 1] = color[1];\n      data[index + 2] = color[0];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 8bit image imageData.data\n * @param {Object} ico should have width, height, bit, colors, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nvar make8bitImageData = function (ico) {\n  var color;\n  var xor = new Uint8Array(ico.xor);\n  var and = util.to1bitArray(ico.and);\n  var xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  var andLine = util.toDividableBy4(ico.width / 8) * 8;\n  var index = 0;\n  var data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  index = 0;\n  for (var h = ico.height - 1; h >= 0; h--) {\n    for (var w = 0; w < ico.width; w++) {\n      color = ico.colors[xor[h * xorLine + w]];\n      data[index] = color[2];\n      data[index + 1] = color[1];\n      data[index + 2] = color[0];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 24bit image imageData.data\n * @param {Object} ico should have width, height, bit, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nvar make24bitImageData = function (ico) {\n  var xor = new Uint8Array(ico.xor);\n  var and = util.to1bitArray(ico.and);\n  var xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  var andLine = util.toDividableBy4(ico.width / 8) * 8;\n  var index = 0;\n  var data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (var h = ico.height - 1; h >= 0; h--) {\n    for (var w = 0; w < ico.width; w++) {\n      data[index] = xor[(h * xorLine + w) * 3 + 2];\n      data[index + 1] = xor[(h * xorLine + w) * 3 + 1];\n      data[index + 2] = xor[(h * xorLine + w) * 3];\n      data[index + 3] = and[h * andLine + w] ? 0 : 255;\n      index += 4;\n    }\n  }\n  return data;\n};\n\n/**\n * make 32bit image imageData.data\n * @param {Object} ico should have width, height, bit, xor, and\n * @returns {Uint8ClampedArray} imageData.data\n */\nvar make32bitImageData = function (ico) {\n  var xor = new Uint8Array(ico.xor);\n  var and = util.to1bitArray(ico.and);\n  var xorLine = util.toDividableBy4(ico.width * ico.bit / 8) * 8 / ico.bit;\n  var andLine = util.toDividableBy4(ico.width / 8) * 8;\n  var index = 0;\n  var data = new Uint8ClampedArray(ico.width * ico.height * 4);\n  for (var h = ico.height - 1; h >= 0; h--) {\n    for (var w = 0; w < ico.width; w++) {\n      data[index] = xor[(h * xorLine + w) * 4 + 2];\n      data[index + 1] = xor[(h * xorLine + w) * 4 + 1];\n      data[index + 2] = xor[(h * xorLine + w) * 4];\n      data[index + 3] = (and[h * andLine + w] === 1 || xor[(h * xorLine + w) * 4 + 3] === 1) ? 0 : (xor[(h * xorLine + w) * 4 + 3] > 1 ? xor[(h * xorLine + w) * 4 + 3] : 255);\n      index += 4;\n    }\n  }\n  return data;\n};\n\nvar previousICO = global.ICO;\n\nvar ICO = {\n  /**\n   * check buffer is valid ico\n   * @param {ArrayBuffer} buffer\n   * @returns {Boolean} true if valid\n   */\n  isICO: function (buffer) {\n    if (!(buffer instanceof ArrayBuffer)) {\n      return false;\n    }\n    var icoDv = new DataView(buffer);\n    // idReserved = icoDv.getUint16(0, true)\n    // idType = icoDv.getUint16(0, true)\n    return icoDv.getUint16(0, true) === 0 && icoDv.getUint16(2, true) === 1;\n  },\n  /**\n   * parse ico file\n   * @param {ArrayBuffer} buffer ico buffer\n   * @returns {Object[]} ico Array of parsed ico\n   * @returns {Number} ico[].bit bit depth\n   * @returns {Number} ico[].width image width\n   * @returns {Number} ico[].height image height\n   * @returns {String} ico[].type image mime-type\n   * @returns {ArrayBuffer} ico[].buffer image buffer\n   */\n  parse: function (buffer) {\n    var icoDv = new DataView(buffer);\n    if (icoDv.getUint16(0, true) !== 0 || icoDv.getUint16(2, true) !== 1) {\n      throw new Error('buffer is not ico');\n    }\n    // make single image icon\n    var ico, data;\n    var icos = [];\n    // var idCount = icoDv.getUint16(4, true);\n    for (var i = 0; i < icoDv.getUint16(4, true); i++) {\n      ico = extractOne(buffer, i);\n      switch (ico.bit) {\n        case 1:\n          data = make1bitImageData(ico);\n          break;\n        case 4:\n          data = make4bitImageData(ico);\n          break;\n        case 8:\n          data = make8bitImageData(ico);\n          break;\n        case 24:\n          data = make24bitImageData(ico);\n          break;\n        case 32:\n          data = make32bitImageData(ico);\n          break;\n      }\n      icos.push({\n        bit: ico.bit,\n        width: ico.width,\n        height: ico.height,\n        buffer: PNG.encode({\n          width: ico.width,\n          height: ico.height,\n          data: data\n        })\n      });\n    }\n    return icos;\n  },\n  /**\n   * no conflict\n   */\n  noConflict: function() {\n    global.ICO = previousICO;\n    return this;\n  }\n};\n\nmodule.exports = ICO;\nglobal.ICO = ICO;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./extractone\":2,\"./png\":3,\"./util\":4}],2:[function(require,module,exports){\n/* jshint node: true */\n\n'use strict';\n\nvar util = require('./util');\n\n/**\n * extract an icon from buffer\n * @param {ArrayBuffer} buffer ico buffer\n * @param {number} index index of icon\n * @returns {Object} ico parsed ico\n * @returns {Number} ico.width image width\n * @returns {Number} ico.height image height\n * @returns {Number} ico.colorCount color count\n * @returns {Number} ico.bit bit depth\n * @returns {Array[]} ico.colors color palette\n * @returns {ArrayBuffer} ico.xor xor image\n * @returns {ArrayBuffer} ico.and xor and\n */\nvar extractOne = function (buffer, index) {\n  var dv = new DataView(buffer);\n  var icoWidth = dv.getUint8(6 + index * 16) || 256;\n  var icoHeight = dv.getUint8(7 + index * 16) || 256;\n  var icoOffset = dv.getUint32(18 + index * 16, true);\n  var icoBit = dv.getUint16(icoOffset + 14, true);\n  var icoColorsOffset = dv.getUint32(18 + index * 16, true) + dv.getUint32(icoOffset, true);\n  var icoColorsCount = dv.getUint32(icoOffset + 32, true);\n  var icoXorOffset = icoColorsOffset + icoColorsCount * 4;\n  var icoAndOffset = icoXorOffset + util.toDividableBy4(icoWidth * icoBit / 8) * icoHeight;\n\n  var ico = {\n    width: icoWidth,\n    height: icoHeight,\n    colorCount: dv.getUint8(8 + index * 16),\n    bit: icoBit,\n    colors: [],\n    xor: buffer.slice(icoXorOffset, icoAndOffset),\n    and: buffer.slice(icoAndOffset, icoAndOffset + util.toDividableBy4(icoWidth / 8) * icoHeight)\n  };\n  for (var i = 0; i < icoColorsCount; i++) {\n    ico.colors.push(util.to8bitArray(buffer.slice(icoColorsOffset + i * 4, icoColorsOffset + i * 4 + 4)));\n  }\n\n  return ico;\n};\n\nmodule.exports = extractOne;\n\n},{\"./util\":4}],3:[function(require,module,exports){\n(function (global){\n/* jshint node: true */\n\n'use strict';\n\n/* istanbul ignore next */\nvar createCanvas = global.document ? function (width, height) {\n  var canvas = global.document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n} : function (width, height) {\n  var Canvas = require('canvas');\n  return new Canvas(width, height);\n};\n\n/* istanbul ignore next */\n/* jshint -W079 */\nvar atob = global.atob ? global.atob : function (str) {\n/* jshint +W079 */\n  var Buffer = require('buffer').Buffer;\n  return new Buffer(str, 'base64').toString('binary');\n};\n\nvar dataURLToArrayBuffer = function (dataURL) {\n  var string =  atob(dataURL.replace(/.+,/, ''));\n  var bytes = new Uint8Array(string.length);\n  for (var i = 0; i < string.length; i++) {\n    bytes[i] = string.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\nvar PNG = {\n  /**\n   * create png from imgData.data\n   * @param {Object} data\n   * @param {Number} image.width img width\n   * @param {Number} image.height img height\n   * @param {Uint8ClampedArray} image.data same as imageData.data\n   * @returns {ArrayBuffer} png\n   */\n  encode: function (image) {\n    var data = image.data;\n    var canvas = createCanvas(image.width, image.height);\n    var ctx = canvas.getContext('2d');\n    var imageData = ctx.createImageData(image.width, image.height);\n    var dataData = imageData.data;\n    for (var i = 0; i < dataData.length; i++) {\n      dataData[i] = data[i];\n    }\n    ctx.putImageData(imageData, 0, 0);\n    return dataURLToArrayBuffer(canvas.toDataURL());\n  },\n  /**\n   * create imgData.data from png\n   * @param {ArrayBuffer} buffer png\n   * @returns {Object} data\n   * @returns {Number} image.width\n   * @returns {Number} image.height\n   * @returns {Uint8ClampedArray} image.data\n   */\n  /*decode: function (buffer) {\n  }*/\n};\n\nmodule.exports = PNG;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"buffer\":undefined,\"canvas\":undefined}],4:[function(require,module,exports){\n/* jshint node: true */\n\n'use strict';\n\nvar util = {\n  /**\n   * convert ArrayBuffer to 1bit Array\n   * @param {ArrayBuffer} buffer\n   * @returns {Array}\n   */\n  to1bitArray: function (buffer) {\n    var buff = new Uint8Array(buffer);\n    var bit = '';\n    for (var i = 0; i < buff.byteLength; i++) {\n      bit += ('000000000' + buff[i].toString(2)).slice(-8);\n    }\n    return bit.split('').map(function (el) {\n      return parseInt(el, 2);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 4bit Array\n   * @param {ArrayBuffer} buffer\n   * @returns {Array}\n   */\n  to4bitArray: function (buffer) {\n    var buff = new Uint8Array(buffer);\n    var bit = '';\n    for (var i = 0; i < buff.byteLength; i++) {\n      bit += ('00' + buff[i].toString(16)).slice(-2);\n    }\n    return bit.split('').map(function (el) {\n      return parseInt(el, 16);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 8bit Array\n   * @param {ArrayBuffer} buffer\n   * @returns {Array}\n   */\n  to8bitArray: function (buffer) {\n    var buff = new Uint8Array(buffer);\n    var bit = [];\n    for (var i = 0; i < buff.byteLength; i++) {\n      bit.push(buff[i]);\n    }\n    return bit;\n  },\n  /**\n   * Make number dividable by 4\n   * @param {Number} num number\n   * @returns {Number} number dividable by 4\n   */\n  toDividableBy4: function (num) {\n    if (num % 4 !== 0) {\n      num += 4 - num % 4;\n    }\n    return num;\n  }\n};\n\nmodule.exports = util;\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}