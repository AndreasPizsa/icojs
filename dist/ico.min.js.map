{"version":3,"sources":["ico.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","global","extractOne","util","PNG","previousIco","ICO","isIco","buffer","ArrayBuffer","icoDv","DataView","getUint16","parse","j","k","index","ico","color","xorLine","andLine","data","icos","and","to1bitArray","width","bit","Uint8ClampedArray","height","xor","colors","to4bitArray","to8bitArray","push","encode","noConflict","this","self","window","./extractOne","./png","./util",2,"dv","getUint8","colorCount","icoSize","getUint32","icoOffset","icoBuffer","slice","icoHeaderSize","icoColorsCount","icoXorOffset","icoAndOffset",3,"createCanvas","document","canvas","createElement","Canvas","atob","str","Buffer","toString","dataURLToArrayBuffer","dataURL","string","replace","bytes","Uint8Array","charCodeAt","image","ctx","getContext","imageData","createImageData","dataData","putImageData","toDataURL","undefined",4,"buff","byteLength","split","map","el","parseInt"],"mappings":"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","file":"ico.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n/* jshint node: true */\n\n'use strict';\n\nvar extractOne = require('./extractOne');\nvar util = require('./util');\nvar PNG = require('./png');\n\nvar previousIco = global.ICO;\n\nvar ICO = {\n  /**\n   * check buffer is valid ico\n   * @param {ArrayBuffer} buffer\n   * @returns {Boolean} true if valid\n   */\n  isIco: function (buffer) {\n    if (!(buffer instanceof ArrayBuffer)) {\n      return false;\n    }\n    var icoDv = new DataView(buffer);\n    // idReserved = icoDv.getUint16(0, true)\n    // idType = icoDv.getUint16(0, true)\n    return icoDv.getUint16(0, true) === 0 && icoDv.getUint16(2, true) === 1;\n  },\n  /**\n   * parse ico file\n   * @param {ArrayBuffer} buffer ico buffer\n   * @returns {Object[]} ico Array of parsed ico\n   * @returns {Number} ico.bit bit depth\n   * @returns {Number} ico.width image width\n   * @returns {Number} ico.height image height\n   * @returns {String} ico.type image mime-type\n   * @returns {ArrayBuffer} ico.buffer image buffer\n   */\n  parse: function (buffer) {\n    var icoDv = new DataView(buffer);\n    if (icoDv.getUint16(0, true) !== 0 || icoDv.getUint16(2, true) !== 1) {\n      throw new Error('buffer is not ico');\n    }\n    var i, j, k, index;\n    // make single image icon\n    var ico, color, xorLine, andLine;\n    var data;\n    var icos = [];\n    // var idCount = icoDv.getUint16(4, true);\n    for (i = 0; i < icoDv.getUint16(4, true); i++) {\n      ico = extractOne(buffer, i);\n      ico.and = util.to1bitArray(ico.and);\n      xorLine = ico.width * ico.bit / 8;\n      if (xorLine % 4 !== 0) {\n        xorLine += 4 - xorLine % 4;\n      }\n      xorLine *= 8 / ico.bit;\n      andLine = ico.width / 8;\n      if (andLine % 4 !== 0) {\n        andLine += 4 - andLine % 4;\n      }\n      andLine *= 8;\n\n      data = new Uint8ClampedArray(ico.width * ico.height * 4);\n      switch (ico.bit) {\n        case 1:\n          ico.xor = util.to1bitArray(ico.xor);\n          index = 0;\n          for (j = ico.height - 1; j >= 0; j--) {\n            for (k = 0; k < ico.width; k++) {\n              color = ico.colors[ico.xor[j * xorLine + k]];\n              data[index * 4] = color[2];\n              data[index * 4 + 1] = color[1];\n              data[index * 4 + 2] = color[0];\n              data[index * 4 + 3] = ico.and[j * andLine + k] ? 0 : 255;\n              index++;\n            }\n          }\n          break;\n        case 4:\n          ico.xor = util.to4bitArray(ico.xor);\n          index = 0;\n          for (j = ico.height - 1; j >= 0; j--) {\n            for (k = 0; k < ico.width; k++) {\n              color = ico.colors[ico.xor[j * xorLine + k]];\n              data[index * 4] = color[2];\n              data[index * 4 + 1] = color[1];\n              data[index * 4 + 2] = color[0];\n              data[index * 4 + 3] = ico.and[j * andLine + k] ? 0 : 255;\n              index++;\n            }\n          }\n          break;\n        case 8:\n          ico.xor = util.to8bitArray(ico.xor);\n          index = 0;\n          for (j = ico.height - 1; j >= 0; j--) {\n            for (k = 0; k < ico.width; k++) {\n              color = ico.colors[ico.xor[j * xorLine + k]];\n              data[index * 4] = color[2];\n              data[index * 4 + 1] = color[1];\n              data[index * 4 + 2] = color[0];\n              data[index * 4 + 3] = ico.and[j * andLine + k] ? 0 : 255;\n              index++;\n            }\n          }\n          break;\n        case 24:\n          ico.xor = util.to8bitArray(ico.xor);\n          index = 0;\n          for (j = ico.height - 1; j >= 0; j--) {\n            for (k = 0; k < ico.width; k++) {\n              data[index * 4] = ico.xor[(j * xorLine + k) * 3 + 2];\n              data[index * 4 + 1] = ico.xor[(j * xorLine + k) * 3 + 1];\n              data[index * 4 + 2] = ico.xor[(j * xorLine + k) * 3];\n              data[index * 4 + 3] = ico.and[j * andLine + k] ? 0 : 255;\n              index++;\n            }\n          }\n          break;\n        case 32:\n          ico.xor = util.to8bitArray(ico.xor);\n          index = 0;\n          for (j = ico.height - 1; j >= 0; j--) {\n            for (k = 0; k < ico.width; k++) {\n              data[index * 4] = ico.xor[(j * xorLine + k) * 4 + 2];\n              data[index * 4 + 1] = ico.xor[(j * xorLine + k) * 4 + 1];\n              data[index * 4 + 2] = ico.xor[(j * xorLine + k) * 4];\n              data[index * 4 + 3] = (ico.and[j * andLine + k] === 1 || ico.xor[(j * xorLine + k) * 4 + 3] === 1) ? 0 : (ico.xor[(j * xorLine + k) * 4 + 3] > 1 ? ico.xor[(j * xorLine + k) * 4 + 3] : 255);\n              index++;\n            }\n          }\n          break;\n      }\n      icos.push({\n        bit: ico.bit,\n        width: ico.width,\n        height: ico.height,\n        buffer: PNG.encode({\n          width: ico.width,\n          height: ico.height,\n          data: data\n        })\n      });\n    }\n    return icos;\n  },\n  /**\n   * no conflict\n   */\n  noConflict: function() {\n    global.ICO = previousIco;\n    return this;\n  }\n};\n\nmodule.exports = ICO;\nglobal.ICO = ICO;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./extractOne\":2,\"./png\":3,\"./util\":4}],2:[function(require,module,exports){\n/* jshint node: true */\n\n'use strict';\n\nvar util = require('./util');\n\n/**\n * extract an icon from buffer\n * @param {ArrayBuffer} buffer ico buffer\n * @param {number} index index of icon\n * @returns {Object} ico parsed ico\n * @returns {Number} ico.width image width\n * @returns {Number} ico.height image height\n * @returns {Number} ico.colorCount color count\n * @returns {Number} ico.bit bit depth\n * @returns {Array[]} ico.colors color palette\n * @returns {ArrayBuffer} ico.xor xor image\n * @returns {ArrayBuffer} ico.and xor and\n */\nvar extractOne = function (buffer, index) {\n  var dv = new DataView(buffer);\n  var ico = {\n    width: dv.getUint8(6 + index * 16) || 256,\n    height: dv.getUint8(7 + index * 16) || 256,\n    colorCount: dv.getUint8(8 + index * 16)\n  };\n  var icoSize = dv.getUint32(14 + index * 16, true);\n  var icoOffset = dv.getUint32(18 + index * 16, true);\n  var icoBuffer = buffer.slice(icoOffset, icoOffset + icoSize);\n  var icoDv = new DataView(icoBuffer);\n  var icoHeaderSize = icoDv.getUint32(0, true);\n  var icoColorsCount = icoDv.getUint32(32, true);\n\n  ico.bit = icoDv.getUint16(14, true);\n  ico.colors = [];\n  for (var i = 0; i < icoColorsCount; i++) {\n    ico.colors.push(util.to8bitArray(icoBuffer.slice(icoHeaderSize + i * 4, icoHeaderSize + i * 4 + 4)));\n  }\n  var icoXorOffset = icoHeaderSize + icoColorsCount * 4;\n  var xorLine = ico.width * ico.bit / 8;\n  if (xorLine % 4 !== 0) {\n    xorLine += 4 - xorLine % 4;\n  }\n  var icoAndOffset = icoXorOffset + xorLine * ico.height;\n  ico.xor = icoBuffer.slice(icoXorOffset, icoAndOffset);\n  var andLine = ico.width / 8;\n  if (andLine % 4 !== 0) {\n    andLine += 4 - andLine % 4;\n  }\n  ico.and = icoBuffer.slice(icoAndOffset, icoAndOffset + andLine * ico.height);\n  return ico;\n};\n\nmodule.exports = extractOne;\n\n},{\"./util\":4}],3:[function(require,module,exports){\n(function (global){\n/* jshint node: true */\n\n'use strict';\n\n/* istanbul ignore next */\nvar createCanvas = global.document ? function (width, height) {\n  var canvas = global.document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n} : function (width, height) {\n  var Canvas = require('canvas');\n  return new Canvas(width, height);\n};\n\n/* istanbul ignore next */\n/* jshint -W079 */\nvar atob = global.atob ? global.atob : function (str) {\n/* jshint +W079 */\n  var Buffer = require('buffer').Buffer;\n  return new Buffer(str, 'base64').toString('binary');\n};\n\nvar dataURLToArrayBuffer = function (dataURL) {\n  var string =  atob(dataURL.replace(/.+,/, ''));\n  var bytes = new Uint8Array(string.length);\n  for (var i = 0; i < string.length; i++) {\n    bytes[i] = string.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\nvar PNG = {\n  /**\n   * create png from imgData.data\n   * @param {Object} data\n   * @param {Number} image.width img width\n   * @param {Number} image.height img height\n   * @param {Uint8ClampedArray} image.data same as imageData.data\n   * @returns {ArrayBuffer} png\n   */\n  encode: function (image) {\n    var data = image.data;\n    var canvas = createCanvas(image.width, image.height);\n    var ctx = canvas.getContext('2d');\n    var imageData = ctx.createImageData(image.width, image.height);\n    var dataData = imageData.data;\n    for (var i = 0; i < dataData.length; i++) {\n      dataData[i] = data[i];\n    }\n    ctx.putImageData(imageData, 0, 0);\n    return dataURLToArrayBuffer(canvas.toDataURL());\n  },\n  /**\n   * create imgData.data from png\n   * @param {ArrayBuffer} buffer png\n   * @returns {Object} data\n   * @returns {Number} image.width\n   * @returns {Number} image.height\n   * @returns {Uint8ClampedArray} image.data\n   */\n  /*decode: function (buffer) {\n  }*/\n};\n\nmodule.exports = PNG;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"buffer\":undefined,\"canvas\":undefined}],4:[function(require,module,exports){\n/* jshint node: true */\n\n'use strict';\n\nvar util = {\n  /**\n   * convert ArrayBuffer to 1bit Array\n   * @param {ArrayBuffer} buffer\n   * @returns {Array}\n   */\n  to1bitArray: function (buffer) {\n    var buff = new Uint8Array(buffer);\n    var bit = '';\n    for (var i = 0; i < buff.byteLength; i++) {\n      bit += ('000000000' + buff[i].toString(2)).slice(-8);\n    }\n    return bit.split('').map(function (el) {\n      return parseInt(el, 2);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 4bit Array\n   * @param {ArrayBuffer} buffer\n   * @returns {Array}\n   */\n  to4bitArray: function (buffer) {\n    var buff = new Uint8Array(buffer);\n    var bit = '';\n    for (var i = 0; i < buff.byteLength; i++) {\n      bit += ('00' + buff[i].toString(16)).slice(-2);\n    }\n    return bit.split('').map(function (el) {\n      return parseInt(el, 16);\n    });\n  },\n  /**\n   * convert ArrayBuffer to 8bit Array\n   * @param {ArrayBuffer} buffer\n   * @returns {Array}\n   */\n  to8bitArray: function (buffer) {\n    var buff = new Uint8Array(buffer);\n    var bit = [];\n    for (var i = 0; i < buff.byteLength; i++) {\n      bit.push(buff[i]);\n    }\n    return bit;\n  }\n};\n\nmodule.exports = util;\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}